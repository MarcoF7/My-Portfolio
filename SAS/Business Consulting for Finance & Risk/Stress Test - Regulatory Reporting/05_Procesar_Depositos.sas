
/*PASO 1: SE TIENE QUE CONTRAVALORAR EL SALDO A EUROS*/
PROC SQL;
	CREATE TABLE DEPOSITOS_LIQ_EUROS AS 
		SELECT A.*,A.SALDO_CONTRAVALORADO*B.TIPO_CAMBIO_EUR  AS SALDO_EUR
			FROM
				&BIBLIOTECA..SALIDA_DEPOSITOS_LIQ A
				,
				TIPO_DE_CAMBIO B 
			WHERE COMPRESS(UPCASE(B.DIVISA))='PEN';
QUIT;

/*PASO 2: SE OBTIENE EL VALOR DEL EPIGRAFE A PARTIR DE LA CUENTA CONTABLE*/
PROC SQL;
	CREATE TABLE DEPOSITOS_STOCK_EP AS 
		SELECT A.* ,B.'EPIGRAFE LOCAL'N
			FROM
				DEPOSITOS_LIQ_EUROS A 
			LEFT JOIN
				Epigrafe_CContable_Format_dis B
				ON A.CUENTA_CONTABLE=B.CUENTA;
QUIT;

/*PASO 3: SE QUITA LOS DUPLICADOS POR LAS VARIABLES A CRUZAR VS LOS INVENTARIOS MIS*/
/*PASO 3.1: SE AGRUPA LA BASE DEPOSITOS*/
PROC SQL;
CREATE TABLE DEPOSITOS_STOCK_EP2 AS
	SELECT MIN(FECHA_APERTURA) AS FECHA_APERTURA FORMAT = DATE10., 
			MAX(FECHA_VENCIMIENTO) AS FECHA_VENCIMIENTO FORMAT = DATE10., 
			CONTRATO, CORASU, CIIU, CLIENTE, CUENTA_CONTABLE, CUENTA_NEOCON,
			DIVISA, PERIODO, SOCIEDAD_INFORMANTE, INSTRUMENTO,
			SECTOR_CONTRAPARTE, PRODUCTO, INTERCOMPANY,
			SUM(SALDO_CONTRAVALORADO) AS SALDO_CONTRAVALORADO, 
			SUM(SALDO_EUR) AS SALDO_EUR, 'EPIGRAFE LOCAL'N
				
			FROM DEPOSITOS_STOCK_EP
				GROUP BY CONTRATO, CORASU, CIIU, CLIENTE, CUENTA_CONTABLE,
						 CUENTA_NEOCON, DIVISA, PERIODO, SOCIEDAD_INFORMANTE,
						 INSTRUMENTO, SECTOR_CONTRAPARTE, PRODUCTO, 
						 INTERCOMPANY, 'EPIGRAFE LOCAL'N;
QUIT;

/*PASO 3.2: SE AGRUPA LOS INVENTARIOS MIS*/
PROC SQL;
CREATE TABLE INVENTARIOS_MIS_CFECHA2 AS
	SELECT  CTA_PRINCIPAL_TEXTO, CONTRATO,DIVISA, 
			SUM(TIPOREF*SALDO_INVENTARIO)/SUM(SALDO_INVENTARIO) AS TIPOREF, 
			SUM(TIPOTAE*SALDO_INVENTARIO)/SUM(SALDO_INVENTARIO) AS TIPOTAE, 
			TIPOTASA, INDICADOR_NEW_BUSSINES, EPIGRAFE_55,
			SUM(SALDO_MEDIO) AS SALDO_MEDIO, SUM(INGRESOS_GASTOS) AS
			INGRESOS_GASTOS, SUM(SALDO_INVENTARIO) AS SALDO_INVENTARIO
			FROM &BIBLIOTECA..INVENTARIOS_MIS_CFECHA
				GROUP BY CTA_PRINCIPAL_TEXTO, CONTRATO, DIVISA,
						 TIPOTASA, INDICADOR_NEW_BUSSINES, EPIGRAFE_55;
QUIT;

/*PASO 4: SE ENRIQUECE LA BASE DEPOSITOS CON LOS INVENTARIOS MIS*/
PROC SQL;
	CREATE TABLE DEPOSITOS_STOC_INV AS 
		SELECT A.*,
			B.TIPOTAE,
			B.TIPOREF,
			B.INDICADOR_NEW_BUSSINES,
			B.SALDO_MEDIO,
			B.INGRESOS_GASTOS
			,B.TIPOTASA	
		FROM
			DEPOSITOS_STOCK_EP2 A 
		LEFT JOIN
			INVENTARIOS_MIS_CFECHA2 B 
			ON A.CONTRATO=B.CONTRATO 
			AND A.CUENTA_CONTABLE=B.CTA_PRINCIPAL_TEXTO 
			AND A.'EPIGRAFE LOCAL'N=B.EPIGRAFE_55
			AND A.DIVISA=B.DIVISA;
QUIT;

/*PASO 5: SE RELLENA CON . LA TASA DE LAS OPERACIONES MI VIVIENDA
YA QUE SON NO INVENTARIADAS Y NO SE TIENE SU INFORMACION EN LOS INVENTARIOS MIS*/
PROC SQL;
	CREATE TABLE DEPOSITOS_STOC_INV_MIVIEN 
(DROP=TIPOTAE RENAME=(TIPOTAE_NEW = TIPOTAE)) AS
		SELECT A.*, 
		CASE WHEN B.CUENTA NE "" AND A.TIPOTAE = . THEN . ELSE 
				A.TIPOTAE END AS TIPOTAE_NEW
			FROM DEPOSITOS_STOC_INV A LEFT JOIN &BIBLIOTECA..H_DEPOSITOS_MI_VIVIEN B
				ON A.CUENTA_CONTABLE = B.CUENTA;
QUIT;


/*PASO 5: TRATAMIENTO PARTICULAR PARA LOS DEPOSITOS MI VIVIENDA
LOGICA ANTIGUA*/
/*ESTAS OPERACIONES SON NO INVENTARIADAS, POR LO QUE PARA 
ENRIQUECERLAS CON LOS INVENTARIOS SE DEBE HACER A NIVEL SOLO DE 
CONTRATO*/
/*PASO 5.1: SE IDENTIFICA CON LA CUENTA CONTABLE DE MI VIVIENDA*/
/*DATA MIVIEN_CUENTA_ST;*/
/*SET DEPOSITOS_STOC_INV;*/
/*	WHERE (CUENTA_CONTABLE="241302010114015");*/
/*RUN;*/

/*PASO 5.2: SE GUARDA TODOS LOS CONTRATOS DE ESTA CUENTA*/
/*PROC SQL;*/
/*	CREATE TABLE MIVIEN_CONTRAT_ST1 AS*/
/*		SELECT DISTINCT CONTRATO*/
/*			FROM MIVIEN_CUENTA_ST;*/
/*QUIT;*/

/*PASO 5.3: SE SELECCIONA ESTOS CONTRATOS DE LOS INVENTARIOS MIS*/
/*PROC SQL;*/
/*	CREATE TABLE MIVIEN_CONTRAT_MIS1 AS */
/*		SELECT **/
/*			FROM INVENTARIOS_MIS_CFECHA2*/
/*				WHERE(CONTRATO IN */
/*				(SELECT CONTRATO FROM MIVIEN_CONTRAT_ST1));*/
/*QUIT;*/

/*PASO 5.4: SE RESUME LA INFORMACIÓN DE LOS INVENTARIOS A NIVEL CONTRATO*/
/*PROC SQL;*/
/*CREATE TABLE MIVIEN_CONTRAT_MIS2 AS*/
/*	SELECT CONTRATO, (SUM(TIPOTAE*SALDO_MEDIO)/SUM(SALDO_MEDIO)) */
/*			AS TIPOTAE, (SUM(TIPOREF*SALDO_MEDIO)/SUM(SALDO_MEDIO))*/
/*			AS TIPOREF,*/
/*			MAX(INDICADOR_NEW_BUSSINES) AS INDICADOR_NEW_BUSSINES, */
/*			(SUM(SALDO_MEDIO)) AS SALDO_MEDIO, */
/*			(SUM(INGRESOS_GASTOS)) AS INGRESOS_GASTOS, MAX(TIPOTASA) */
/*			AS TIPOTASA*/
/*			FROM MIVIEN_CONTRAT_MIS1*/
/*				GROUP BY 1;*/
/*QUIT;*/


/*PASO 5.5: SE ENRIQUECE A DEPOSITOS MI VIVIENDA*/
/*PROC SQL;*/
/*CREATE TABLE DEPOSITOS_STOC_INV2 AS*/
/*	SELECT A.*, (CASE WHEN B.CONTRATO NE "" THEN B.TIPOTAE*/
/*				ELSE A.TIPOTAE END) AS TIPOTAE_NEW,*/
/*				(CASE WHEN B.CONTRATO NE "" THEN B.TIPOREF*/
/*				ELSE A.TIPOREF END) AS TIPOREF_NEW,*/
/*				(CASE WHEN B.CONTRATO NE "" THEN*/
/*				B.INDICADOR_NEW_BUSSINES ELSE*/
/*				A.INDICADOR_NEW_BUSSINES END) AS INDICADOR_NEW_BUSSINES_NEW,*/
/*				(CASE WHEN B.CONTRATO NE "" THEN*/
/*				0 ELSE A.SALDO_MEDIO END) AS SALDO_MEDIO_NEW,*/
/*				(CASE WHEN B.CONTRATO NE "" THEN */
/*				0 ELSE A.INGRESOS_GASTOS END) AS INGRESOS_GASTOS_NEW,*/
/*				(CASE WHEN B.CONTRATO NE "" THEN*/
/*				B.TIPOTASA ELSE A.TIPOTASA END) AS TIPOTASA_NEW*/
/*		FROM DEPOSITOS_STOC_INV A LEFT JOIN MIVIEN_CONTRAT_MIS2 B*/
/*			ON A.CONTRATO = B.CONTRATO;*/
/*QUIT;*/

/*PASO 5.6: SE MANTIENE LOS NOMBRES INICIALES*/
/*DATA DEPOSITOS_STOC_INV3 */
/*	(DROP=TIPOTAE TIPOREF */
/*	INDICADOR_NEW_BUSSINES SALDO_MEDIO INGRESOS_GASTOS TIPOTASA*/
/*	RENAME=(TIPOTAE_NEW = TIPOTAE*/
/*	TIPOREF_NEW = TIPOREF*/
/*	INDICADOR_NEW_BUSSINES_NEW = INDICADOR_NEW_BUSSINES*/
/*	SALDO_MEDIO_NEW = SALDO_MEDIO INGRESOS_GASTOS_NEW = INGRESOS_GASTOS*/
/*	TIPOTASA_NEW = TIPOTASA));*/
/*SET DEPOSITOS_STOC_INV2;*/
/*RUN;*/



/*PASO 6: SE QUITAN DUPLICADOS*/
PROC SQL;
CREATE TABLE DEPOSITOS_TEMP AS 
	SELECT A.FECHA_APERTURA,A.FECHA_VENCIMIENTO,A.CONTRATO,A.CUENTA_CONTABLE,A.CUENTA_NEOCON, A.CLIENTE,
		A.CORASU, A.CIIU, A.DIVISA,A.PERIODO,A.SOCIEDAD_INFORMANTE,A.INSTRUMENTO,A.SECTOR_CONTRAPARTE,A.PRODUCTO,
		A.INTERCOMPANY,A.SALDO_CONTRAVALORADO,
		'EPIGRAFE LOCAL'N,	AVG(TIPOTAE) AS TIPOTAE,TIPOREF	,
		INDICADOR_NEW_BUSSINES	,
		SALDO_MEDIO	,INGRESOS_GASTOS	,TIPOTASA,SALDO_EUR
	FROM DEPOSITOS_STOC_INV_MIVIEN A
		GROUP BY 
			A.FECHA_APERTURA,A.FECHA_VENCIMIENTO,A.CONTRATO,A.CUENTA_CONTABLE,A.CUENTA_NEOCON, A.CLIENTE,
			A.CORASU, A.CIIU,A.DIVISA,A.PERIODO,A.SOCIEDAD_INFORMANTE,A.INSTRUMENTO,A.SECTOR_CONTRAPARTE,A.PRODUCTO,
			A.INTERCOMPANY,A.SALDO_CONTRAVALORADO,
			'EPIGRAFE LOCAL'N,TIPOREF	,
			INDICADOR_NEW_BUSSINES	,
			SALDO_MEDIO	,INGRESOS_GASTOS	,TIPOTASA,SALDO_EUR

	;
QUIT;

PROC SQL;
	CREATE TABLE DEPOSITOS_TEMP_2 AS 
		SELECT A.FECHA_APERTURA,A.FECHA_VENCIMIENTO,A.CONTRATO,A.CUENTA_CONTABLE,A.CUENTA_NEOCON, A.CLIENTE,
			A.CORASU, A.CIIU,A.DIVISA,A.PERIODO,A.SOCIEDAD_INFORMANTE,A.INSTRUMENTO,A.SECTOR_CONTRAPARTE,A.PRODUCTO,
			A.INTERCOMPANY,A.SALDO_CONTRAVALORADO,
			'EPIGRAFE LOCAL'N,	AVG(TIPOTAE) AS TIPOTAE,TIPOREF	,
			INDICADOR_NEW_BUSSINES	,
			SUM(SALDO_MEDIO)AS SALDO_MEDIO	,SUM(INGRESOS_GASTOS) AS INGRESOS_GASTOS	,TIPOTASA,
			SUM(SALDO_EUR) AS SALDO_EUR
		FROM DEPOSITOS_TEMP A
			WHERE SALDO_CONTRAVALORADO NE .
				GROUP BY 
					A.FECHA_APERTURA,A.FECHA_VENCIMIENTO,A.CONTRATO,A.CUENTA_CONTABLE,A.CUENTA_NEOCON, A.CLIENTE,
					A.CORASU, A.CIIU,A.DIVISA,A.PERIODO,A.SOCIEDAD_INFORMANTE,A.INSTRUMENTO,A.SECTOR_CONTRAPARTE,A.PRODUCTO,
					A.INTERCOMPANY,A.SALDO_CONTRAVALORADO,
					'EPIGRAFE LOCAL'N,TIPOREF	,
					INDICADOR_NEW_BUSSINES,TIPOTASA

	;
QUIT;


/*PASO 7: TRATAMIENTO DL521*/
/*PASO 7.1: SE SEPARA LOS REGISTROS QUE NO TIENEN CONTRATO DE LOS QUE TIENEN*/
DATA DEPOSITOS_DL521 DEPOSITOS_SINDL521;
	SET DEPOSITOS_TEMP_2;

	IF CONTRATO='' THEN
		OUTPUT  DEPOSITOS_DL521;
	ELSE OUTPUT DEPOSITOS_SINDL521;
RUN;

/*PASO 7.2: SE CRUZA CON DL521 PARA COMPLETAR LOS CAMPOS*/
PROC SQL;
	CREATE TABLE DEPOSITOSDL521
		AS
			SELECT A.FECHA_APERTURA,A.FECHA_VENCIMIENTO,A.CONTRATO,A.CUENTA_CONTABLE,A.CUENTA_NEOCON, A.CLIENTE,
				A.CORASU, A.CIIU,A.DIVISA,A.PERIODO,A.SOCIEDAD_INFORMANTE,A.INSTRUMENTO,A.SECTOR_CONTRAPARTE,A.PRODUCTO,
				A.INTERCOMPANY,A.SALDO_EUR,A.SALDO_CONTRAVALORADO,
				B.INGRESOS_GASTOS,B.INDICADOR_NEW_BUSSINES,B.TASA AS TIPOTAE, "F" AS TIPOTASA

			FROM
				DEPOSITOS_DL521 A
			LEFT JOIN
				DL521_VENC_PRO B
				ON
				A.CUENTA_CONTABLE=B.CTA_PRINCIPAL
				AND A.FECHA_APERTURA=B.FECHA_CONTRATACIÓN
				AND
				A.FECHA_VENCIMIENTO=B.FECHA_VENCIMIENTO;
QUIT;

/*PASO 7.3: OBTENEMOS EL EPIGRAFE*/
PROC SQL;
	CREATE TABLE DL521_DP_EPI AS 
		SELECT A.*,B.'EPIGRAFE LOCAL'N FROM 
			DEPOSITOSDL521 A
		LEFT JOIN 
			Epigrafe_CContable_Format_dis B 
			ON B.CUENTA=A.CUENTA_CONTABLE;
QUIT;

/* PASO 7.4: PARA COMPLETAR EL CRITERIO DE NEW BUSINESS
SI EL CONTRATO FUE CELEBRADO EN EL AÑO DEL REPORTE ENTONCES SE CONSIDERA NEW BUSISNESS*/
DATA DL521_DEP_NB;
	SET DL521_DP_EPI;

	IF INDICADOR_NEW_BUSSINES = '' AND YEAR(FECHA_APERTURA)=SUBSTR(&FECHAREPORTE,1,4) THEN
		INDICADOR_NEW_BUSSINES='S';
	ELSE IF INDICADOR_NEW_BUSSINES = '' AND YEAR(FECHA_APERTURA) NE SUBSTR(&FECHAREPORTE,1,4) THEN
		INDICADOR_NEW_BUSSINES='N';
RUN;

/*PASO 7.5: SE JUNTAN LOS REGISTROS CON CONTRATO Y SIN CONTRATO DENUEVO*/
DATA DEPOSITOS_INPUT_SUM;
SET DL521_DEP_NB DEPOSITOS_SINDL521;
RUN;

/*PASO 8: PARA NO AGRUPAR LOS REGISTROS QUE TIENENE CAMPOS NUMERICOS NULOS SE PONE UNA MARCA , 
ADEMAS SE APLICA EL CONCEPTO DE NEW BUSINESS*/
DATA DEPOSITOS_SALD_MED;
	SET DEPOSITOS_INPUT_SUM;

	IF SALDO_MEDIO=. THEN
		MARCASM='N';
	ELSE MARCASM='S';

	IF SALDO_CONTRAVALORADO=. THEN
		MARCASC='N';
	ELSE MARCASC='S';

	IF INGRESOS_GASTOS=. THEN
		MARCAGASTOS='N';
	ELSE MARCAGASTOS='S';

	IF INDICADOR_NEW_BUSSINES='' AND YEAR(FECHA_APERTURA)=SUBSTR(&FECHAREPORTE,1,4) THEN
		INDICADOR_NEW_BUSSINES='S';
	ELSE IF INDICADOR_NEW_BUSSINES='' AND YEAR(FECHA_APERTURA)NE SUBSTR(&FECHAREPORTE,1,4) THEN
		INDICADOR_NEW_BUSSINES='N';
RUN;

/*PASO 9: SE HOMOLOGA LOS VALORES DETERMINADOS POR CRITERIO*/
DATA DEPOSITOS_HOMOLOGADO;
	SET DEPOSITOS_SALD_MED;
	G001="&FECHAREPORTE";
	G002="&SOCIEDAD_INFORMANTE";
	G003='05';
	G005='';
	G006='';
	G010='';
	G011='';
	G013='';
	G015='';
	G018='N';
	G020='';

	/*SE CALCULA EL VENCIMIENTO ORIGINAL*/
	DIAS=FECHA_VENCIMIENTO-FECHA_APERTURA;
RUN;

/*PASO 10: SE AGRUPA Y SUMARIZA LOS SALDOS POR LOS EJES PARA NO TENER REGISTROS DUPLICADOS*/
PROC SQL;
	CREATE TABLE DEPOSITOS_AGRUPADO AS 
		SELECT 
			CONTRATO,
			DIAS,
			CUENTA_CONTABLE,
			CUENTA_NEOCON,
			CLIENTE,
			CORASU,
			CIIU,
			DIVISA,
			'EPIGRAFE LOCAL'N,
			FECHA_APERTURA,
			FECHA_VENCIMIENTO,
			G001,
			G002,
			G003,
			G005,
			G006,
			G010,
			G011,
			G013,
			G015,
			G018,
			G020,
			INDICADOR_NEW_BUSSINES,
			INTERCOMPANY,
			PERIODO,
			PRODUCTO,
			SECTOR_CONTRAPARTE,
			SOCIEDAD_INFORMANTE,
			TIPOREF,
			TIPOTAE,
			MARCASM,
			MARCASC,
			MARCAGASTOS,
			SUM(SALDO_CONTRAVALORADO) AS SALDO_CONTRAVALORADO,
			SUM(SALDO_MEDIO) AS SALDO_MEDIO,
			SUM(INGRESOS_GASTOS) AS INGRESOS_GASTOS,
			SUM(SALDO_EUR) AS SALDO_EUR
		FROM
			DEPOSITOS_HOMOLOGADO 
		GROUP BY 
			1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33;
QUIT;

/*PASO 11: SE HOMOLOGA EL SECTOR DE ACUERDO A LA PARAMETRIA*/
PROC SQL;
	CREATE TABLE DEPOSITOS_SECTOR AS 
		SELECT A.*,
			B.VALOR AS G004, B.NUEVO_SECTOR AS NUEVO_SECTOR FORMAT = $3.
		FROM
			DEPOSITOS_AGRUPADO A
		LEFT JOIN
			&BIBLIOTECA..H_SECTOR_DEPOSITOS B
			ON
			A.SECTOR_CONTRAPARTE=B.SECTOR;
QUIT;

/*PASO 12: SE HOMOLOGA EL EPIGRAFE, NUEVO SECTOR E INTERCOMPANY*/
data DEPOSITOS_TER_DUG;
	set Depositos_Sector;
	G009='EPIGRAFE LOCAL'n;

	if (Nuevo_Sector ne "MDB") then
		Nuevo_Sector = ""; /*Solo MDB lo obtengo de este cruce con sector_contraparte
									tal cual me viene de Liquidez, los demas se haran con la
									homologacion de FINREP, para que todo el reporte este alineado*/
	if Intercompany ='Tercero' then
		G012= 'TER';
	else  
		G012='INT';
run;

/*PASO 13: SE HOMOLOGA LA DIVISA*/
PROC SQL;
	CREATE TABLE DEPOSITOS_DIVISA AS
		SELECT A.*,CASE WHEN B.VALOR NE '' THEN B.VALOR ELSE "XXX" END AS G016
			FROM DEPOSITOS_TER_DUG A
				LEFT JOIN &BIBLIOTECA..H_DIVISA B
					ON A.DIVISA=B.VALOR;
QUIT;

/*PASO 14: SE HOMOLOGA EL TIPO DE CAMBIO*/
DATA DEPOSITOS_TIP_VAR;
	SET DEPOSITOS_DIVISA;
	G017='F';
	G018='N';
	G020='';
	G021='';
	G022='';
	G023='';
	G024='';
	G025=INDICADOR_NEW_BUSSINES;
	G026='';
RUN;

/*PASO 15: SE CRUZA POR LA TASA PARA OBTENER LOS TRAMOS*/
PROC SQL;
	CREATE TABLE DEPOSITOS_TRAMO_INT AS 
		SELECT 
			A.*,
			B.TIPO_TRAMO AS G019

		FROM
			DEPOSITOS_TIP_VAR A
		LEFT JOIN
			&BIBLIOTECA..H_TRAMOS_TIPO B
			ON
			A.TIPOTAE>B.COTA_INFERIOR 
			AND 
			A.TIPOTAE<=B.COTA_SUPERIOR;
QUIT;

/*PASO 16: SE TRABAJA LOS VALORES NUMERICOS*/
DATA DEPOSITOS_SALDO;
	SET DEPOSITOS_TRAMO_INT;
	A001=(SALDO_EUR );  
	A002=ABS(SALDO_MEDIO); /*SALDO_MEDIO VIENE DE INVENTARIOS_MIS_CFECHA*/
	A009=INGRESOS_GASTOS; /*INGRESOS_GASTOS VIENE DE INVENTARIOS_MIS_CFECHA*/
RUN;

/*PASO 17: HOMOLOGACION FINREP DEPOSITOS*/
/*PASO 17.1: SE ALMACENA EL CODIGO DE CORASU Y CIIU DE LA BASE PERSONAS
PARA APLICAR LAS HOMOLOGACIONES DE FINREP DEPOSITOS
Y LLEGAR AL DESGLOSE DE SALDOS DEL F08*/
PROC SQL;
	CREATE TABLE CORASU_CIIU AS
		SELECT DISTINCT CODCLIEN, CORASU, CIIU
			FROM &bibliotecaInputs..Info_Clientes;
QUIT;

/*PASO 17.2: SE HOMOLOGA CIIU Y CORASU*/
PROC SQL;
	CREATE TABLE DEPOSITOS_TII2 AS
		SELECT A.*, 
			(CASE WHEN B.CORASU NE "" THEN B.CORASU ELSE A.CORASU END) AS CORASU_NEW, 
			(CASE WHEN B.CIIU NE "" THEN SUBSTR(B.CIIU,8,2) ELSE SUBSTR(A.CIIU,8,2) END) 
			AS CIIU_NEW FORMAT = $2.

			FROM DEPOSITOS_SALDO A LEFT JOIN CORASU_CIIU B
				ON A.CLIENTE = B.CODCLIEN;
QUIT;

/*PASO 17.3: SE HOMOLOGA SECTOR CON CUENTA NEOCON*/
PROC SQL;
	CREATE TABLE NUEVODESGLOSE1 AS
		SELECT A.*, B.SECTOR AS SECTOR_PLAN00, B.PRODUCTO AS PRODUCTO_F
			FROM DEPOSITOS_TII2 A LEFT JOIN &BIBLIOTECA..PARAMETRIA_FINREP_DEP B
				ON A.CUENTA_NEOCON = B.CUENTA;
QUIT;


/*PASO 17.4: SE HOMOLOGA SECTOR_CORASU_CIIU*/
PROC SQL;
	CREATE TABLE NUEVODESGLOSE2_NEW AS
		SELECT	A.*, 
				B.SECTOR AS SECTOR_CORASU_CIIU 
		FROM NUEVODESGLOSE1 A LEFT JOIN &BIBLIOTECA..H_DEP_CORASU B
		ON A.CORASU_NEW = B.CORASU 			
		AND (COMPRESS(TRIM(A.CIIU_NEW)) = COMPRESS(TRIM(B.CIIU)) 
					OR (B.CIIU = "NA" AND NOT (A.CIIU_NEW IN ("65", "66", "67") 
					AND A.CORASU_NEW IN ("F01", "F02", "M02", "M20"))));
QUIT;

/*PASO 17.5: SE HOMOLOGA TIPOLOGIA PYME*/
PROC SQL;
	CREATE TABLE NUEVODESGLOSE4 AS
		SELECT	A.*, 
				B.TIPOLOGIA AS TIPOLOGIAPYME
		FROM NUEVODESGLOSE2_NEW A LEFT JOIN BASE_PYMES_CLIENTE B
		ON A.CLIENTE=B.CODCEN;
QUIT;

/*PASO 17.6: SE HOMOLOGA TIPOLOGIA PYME*/
DATA NUEVODESGLOSE5;
	SET NUEVODESGLOSE4;

	IF INTERCOMPANY ="Tercero" THEN
		DO;
			TIPOLOGIAPYME=TIPOLOGIAPYME;
		END;
	ELSE
		DO;
			TIPOLOGIAPYME="";
		END;
RUN;

/*PASO 17.7: SE HOMOLOGA DESCRIPCION SALDOS*/
PROC SQL;
	CREATE TABLE NUEVODESGLOSE6 AS
	SELECT 	A.*,
			B.DESCRIPCION AS DESCRIPCIONSALDOSDIARIOS
		FROM NUEVODESGLOSE5 A LEFT JOIN SALDOS_DIARIOS_NORM B
		ON A.CUENTA_CONTABLE = B.CTA_CONTABLE15CHAR;
QUIT;

/*PASO 17.8: SE HOMOLOGA SALDOS DIARIOS*/
PROC SQL;
	CREATE TABLE NUEVODESGLOSE7 AS 
		SELECT	A.*,
				B.SECTOR AS SECTORSALDOSDIARIOS
		FROM NUEVODESGLOSE6 A LEFT JOIN &BIBLIOTECA..H_SECTOR_SALDOSDIARIOS B
		ON COMPRESS(TRIM(A.DESCRIPCIONSALDOSDIARIOS)) = COMPRESS(TRIM(B.DESCRIPCION))
		AND CORASU_NEW = "F00";
QUIT;

/*PASO 17.9: CONSOLIDAMOS*/
DATA DEPOSITOSSECTOR_PREV (DROP=SECTOR_CORASU_CIIU SECTORAUX SECTORSALDOSDIARIOS DESCRIPCIONSALDOSDIARIOS);
	FORMAT SECTORAUX	$100.;
	SET NUEVODESGLOSE7;


	IF SECTOR_PLAN00 NOT IN ("Particulares + Autonomos") THEN
		DO;
			SECTORAUX = SECTOR_PLAN00;
		END;
	ELSE
		DO;
			IF CORASU_NEW="F00" AND SECTORSALDOSDIARIOS ^= "" THEN
				DO;
					SECTORAUX = SECTORSALDOSDIARIOS;
				END;
			ELSE IF SECTORSALDOSDIARIOS="" AND CORASU_NEW=^"" THEN
				DO;
					SECTORAUX= SECTOR_CORASU_CIIU;
				END;
			ELSE
				DO;
					SECTORAUX="Particulares";
				END;
		END;

	SECTOR_F = SECTORAUX;

RUN;

/*PASO 17.10: TRATAMIENTO AUTONOMOS*/
DATA DEPOSITOSSECTOR;
	SET DEPOSITOSSECTOR_PREV;

	IF CORASU_NEW IN ("F00","F01","F02") AND TIPOLOGIAPYME="Pymes" THEN
		DO;
			SECTOR_F="Autonomos";
			TIPOLOGIAPYME="";
		END;
RUN;

/*PASO 17.11: SE HOMOLOGA EL NUEVO SEGMENTO FINREP*/
PROC SQL;
	CREATE TABLE HOMOL_DEP1 AS
		SELECT A.*, B.NUEVO_SECTOR AS NUEVO_SECTOR2 FORMAT = $3., B.VALOR AS SEGMENTO_FIN
			FROM DEPOSITOSSECTOR A LEFT JOIN &BIBLIOTECA..H_DEP_FINREP_SEG B
				ON A.SECTOR_F = B.SECTOR;
QUIT;

/*PASO 17.12: SE HOMOLOGA EL NUEVO NUEVO_SECTOR*/
/*'NUEVO_SECTOR' SE USO PARA LOS BANCOS MULTILATERALES DE DESARROLLO DE LIQ*/
DATA HOMOL_DEP1_SECTOR (DROP=NUEVO_SECTOR NUEVO_SECTOR2);
SET HOMOL_DEP1;
	FORMAT NEW_SECTOR $3.;

	IF (NUEVO_SECTOR NE "") THEN /*MDB SE CALCULO CON LA PARAMETRIA DE LIQUIDEZ (NUEVO_SECTOR)*/
		NEW_SECTOR = NUEVO_SECTOR;
	ELSE
		NEW_SECTOR = NUEVO_SECTOR2;
RUN;

/*PASO 17.13: SE HOMOLOGA EL NUEVO PRODUCTO DEPOSITOS*/
PROC SQL;
	CREATE TABLE HOMOL_DEP2 AS
		SELECT A.*, B.VALOR AS PRODUCTO_FIN
			FROM HOMOL_DEP1_SECTOR A LEFT JOIN &BIBLIOTECA..H_DEP_FINREP_PROD B
				ON A.PRODUCTO_F = B.PRODUCTO;
QUIT;

/*
Se tiene info repetida en la neocon 20005: del DL521 y de cuentas ausentes,
nos quedamos con las negativas que viene de cuentas ausentes y estan cuadradas vs el B29
*/
data HOMOL_DEP3;
set HOMOL_DEP2;
	if (SEGMENTO_FIN = "001" AND cuenta_neocon = "20005" AND A001>0) then
		do;
			delete;
		end;
run;

DATA HOMOL_DEP4;
SET HOMOL_DEP3;
	IF (SEGMENTO_FIN = "001") THEN
		DO;
			A001 = abs(A001); /*Bancos Centrales deben ser positivos por definicion*/
		END;
RUN;


/*VERIFICAMOS QUE LOS SALDOS ESTEN BIEN DISTRIBUIDOS CON ESTA NUEVA HOMOLOGACION*/
PROC SQL;
	CREATE TABLE AGRUPTOT AS
		SELECT SEGMENTO_FIN, PRODUCTO_FIN, SUM(SALDO_EUR)/1000 AS SUM_SALDO
			FROM HOMOL_DEP4
				GROUP BY 1,2;
QUIT;

/*Los casos particulares que no estan contemplados en la nueva parametria de
noecon de finrep seran asignados como particulares a la vista*/
DATA HOMOL_DEP4_VACIOS;
SET HOMOL_DEP4;
	IF (SEGMENTO_FIN = "") THEN
		DO;
			SEGMENTO_FIN = "006"; /*Particulares*/	
			NEW_SECTOR = "P";	
		END;

	IF (PRODUCTO_FIN = "") THEN
		DO;
			PRODUCTO_FIN = "020"; /*A la vista*/	
		END;
run;

/*PASO 18: SE HOMOLOGA EL TRAMO DE VENCIMIENTO ORIGINAL*/
DATA DEPOSITOS_VTORIGINAL_P;
	SET HOMOL_DEP4_VACIOS;
	FORMAT FE_REV DDMMYY10.;
	SPREAD = TIPOTAE - TIPOREF; /* SPREAD SE CALCULA CON TIPOTAE Y TIPOREF*/
	FE_REV = .;

	IF DIAS <=365 THEN
		G030='01';
	ELSE IF DIAS>365 AND DIAS<=730 THEN
		G030='02';
	ELSE G030='03';

	G028='';

	C1014 = ""; /*TIPO DE EMISIÓN FINREP VACIO PORQUE NO ESTAMOS EN EMISIONES, ES G015*/
RUN;

/*PASO 19: SE CARGA LA FECHA DE BAJA DE INVENTARIOS MIS*/
PROC SQL;
	CREATE TABLE DEPOSITOS_VTORIGINAL_P2 AS
		SELECT A.*, B.FECANCEL
			FROM DEPOSITOS_VTORIGINAL_P A LEFT JOIN INVENTARIOS_MIS_SALDO_FECANCEL B
				ON A.CONTRATO =  B.CONTRATO;			
QUIT;

/*PASO 20: SE DA FORMATO A LAS FECHAS Y RENOMBRA CAMPOS*/
DATA DEPOSITOS_VTORIGINAL_P3 
(
DROP=FECANCEL
RENAME=(FECANCEL2 = FECANCEL G003=INSTRUMENTO SEGMENTO_FIN = SEGMENTO_FINREP G013 = PROD_PRESTAMOS PRODUCTO_FIN = PROD_DEPOSITOS
	  	 G015 = PROD_EMIRF G025 = INDNEWBUS));
SET DEPOSITOS_VTORIGINAL_P2;

/*SE HALLAN LOS INDICADORES QUE PIDEN EN EL REQUERIMIENTO AGREGADO*/
	
	IF (FECANCEL = "00010101") THEN
		FECANCEL = "";

	FECANCEL2 = INPUT(FECANCEL,YYMMDD8.);
	FORMAT FECANCEL2 DATE10.;
RUN;

/*PASO 21: SE HOMOLOGA INDICADORES MATURING BUSINESS Y OPERATIVA VIVA*/
DATA DEPOSITOS_VTORIGINAL_P4;
SET DEPOSITOS_VTORIGINAL_P3;
	FORMAT INDOPERVIVA $1.;
	FORMAT INDMATBUS $1.;

	INDOPERVIVA = "V"; 
	ANIODATOS = SUBSTR(G001,1,4);

	IF(ANIODATOS = YEAR(FECANCEL)) THEN
		DO;
			INDMATBUS = "S";
			A001 = 0; /*LAS OPERATIVAS VENCIDAS NO DEBEN TENER SALDO PUNTUAL A CIERRE DE MES*/
			INDOPERVIVA = "F";
		END;		
	ELSE	
		INDMATBUS = "N";
RUN;		

/*PASO 22: SE CALCULA CAMPO C0005 (TAMAÑO EMPRESA)*/
DATA DEPOSITOS_VTORIGINAL_P5;
SET DEPOSITOS_VTORIGINAL_P4;
	FORMAT C0005 $1.;

	IF (SEGMENTO_FINREP = "005") THEN
		DO;
			IF(TIPOLOGIAPYME = "Pymes") THEN
				C0005 = "P";
			ELSE
				C0005 = "G";
		END;
RUN;

/*PASO 23: SE SELECCIONA LOS CAMPOS EXIGIDOS A NIVEL CONTRATO*/
PROC SQL;
	CREATE TABLE DEPOSITOS_STRESS_2017_CONTR AS
		SELECT CONTRATO AS C0000 FORMAT = $18.,NEW_SECTOR AS C0001 FORMAT = $25., C0005,
			A001 AS C0016, G001 AS C0019,
			G002 AS C0020, INTERCOMPANY AS C0021, G016 AS C0022, G017 AS C0023, G018 AS C0024, G019 AS C0025,
			TIPOTAE AS C0026, G021 AS C0027, TIPOREF AS C0028, SPREAD AS C0029,
			G024 AS C0030, FE_REV AS C0038, FECHA_APERTURA AS C0039, FECANCEL AS C0040,
			ABS(A002) AS C0041, FECHA_VENCIMIENTO AS C0050, G023 AS C0052, 
			A009 AS C0067, . AS C0068,
			"PE" AS C0900, "PEN" AS C0901, "" AS C0973, G028 AS C1010 FORMAT = $2., C1014,

			CUENTA_NEOCON,CUENTA_CONTABLE AS CTA_CONTABLE,

			. AS PLAZOREF,INSTRUMENTO, SEGMENTO_FINREP, PROD_PRESTAMOS, PROD_DEPOSITOS, PROD_EMIRF,
			"" AS PROD_DERIVADOS FORMAT = $2., INDNEWBUS, INDOPERVIVA, INDMATBUS, DIAS, G012 AS MARCA_INTERGRUPO
		FROM 

			DEPOSITOS_VTORIGINAL_P5 ;
QUIT;



/*Borramos todas las tablas intermedias que ya no se usan para liberar espacio en la memoria*/
%borrarTabla(Depositos_liq_Euros);
%borrarTabla(DEPOSITOS_STOCK_EP);
%borrarTabla(DEPOSITOS_STOCK_EP2);
%borrarTabla(Inventarios_Mis_cfecha2);
%borrarTabla(DEPOSITOS_STOC_INV);
%borrarTabla(DEPOSITOS_STOC_INV_MIVIEN);
%borrarTabla(Mivien_Cuenta_ST);
%borrarTabla(Mivien_Contrat_ST1);
%borrarTabla(Mivien_Contrat_MIS1);
%borrarTabla(Mivien_Contrat_MIS2);
%borrarTabla(DEPOSITOS_STOC_INV2);
%borrarTabla(DEPOSITOS_STOC_INV3);
%borrarTabla(Depositos_temp);
%borrarTabla(Depositos_temp_2);
%borrarTabla(DEPOSITOS_DL521);
%borrarTabla(DEPOSITOS_SINDL521);
%borrarTabla(DEPOSITOSDL521);
%borrarTabla(DL521_DP_EPI);
%borrarTabla(DL521_DEP_NB);
%borrarTabla(DEPOSITOS_INPUT_SUM);
%borrarTabla(DEPOSITOS_SALD_MED);
%borrarTabla(DEPOSITOS_HOMOLOGADO);
%borrarTabla(DEPOSITOS_AGRUPADO);
%borrarTabla(DEPOSITOS_SECTOR);
%borrarTabla(DEPOSITOS_TER_DUG);
%borrarTabla(DEPOSITOS_DIVISA);
%borrarTabla(DEPOSITOS_TIP_VAR);
%borrarTabla(DEPOSITOS_TRAMO_INT);
%borrarTabla(depositos_Saldo);
%borrarTabla(Corasu_Ciiu);
%borrarTabla(DEPOSITOS_TII2);
%borrarTabla(NuevoDesglose1);
%borrarTabla(NuevoDesglose2_new);
%borrarTabla(NuevoDesglose3);
%borrarTabla(NuevoDesglose4);
%borrarTabla(NuevoDesglose5);
%borrarTabla(NuevoDesglose6);
%borrarTabla(NuevoDesglose7);
%borrarTabla(DepositosSector_prev);
%borrarTabla(DEPOSITOSSECTOR);
%borrarTabla(Homol_Dep1);
%borrarTabla(Homol_Dep1_Sector);
%borrarTabla(Homol_Dep2);
%borrarTabla(Homol_Dep3);
%borrarTabla(HOMOL_DEP4);
%borrarTabla(HOMOL_DEP4_VACIOS);
%borrarTabla(AgrupTot);
%borrarTabla(DEPOSITOS_VTORIGINAL_P);
%borrarTabla(DEPOSITOS_VTORIGINAL_P2);
%borrarTabla(DEPOSITOS_VTORIGINAL_P3);
%borrarTabla(DEPOSITOS_VTORIGINAL_P4);
%borrarTabla(DEPOSITOS_VTORIGINAL_P5);