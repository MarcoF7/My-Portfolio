
/*PASO 1: SE ELIMINAN LAS CUENTAS DE PASIVO DENTRO DE CREDITO LIQUIDEZ, PUES
NO FORMAN PARTE DEL PERIMETRO*/
/*PASO 1.1: SE SELECCIONA EN UNA TABLA LAS CUENTAS DE PASIVO A ELIMINAR*/
PROC SQL;
	CREATE TABLE H_CUENTAS_ELIMINAR_CREDITO_PAS AS
		SELECT *
			FROM &BIBLIOTECA..H_CUENTAS_ELIMINAR_CREDITO	
				WHERE(DESCRIPCION = "Pasivo Liquidez");
QUIT;

/*PASO 1.2: SE ELIMINAN LAS CUENTAS DE PASIVO*/
PROC SQL;
	CREATE TABLE CREDITO_LIQ_SIN_PAS AS
		SELECT *
			FROM &BIBLIOTECA..SALIDA_CREDITO_LIQ
				WHERE(CTA_NEOCON NOT IN (SELECT CUENTA_NEOCON FROM H_CUENTAS_ELIMINAR_CREDITO_PAS));
QUIT;

/*PASO 2: SE TIENE QUE CONTRAVALORAR EL SALDO CONTABLE BRUTO DE SOLES A EUROS*/
PROC SQL;
	CREATE TABLE CREDITO_NOPIG_EUR
		AS 

		SELECT A.*,A.SALDO_CONTABLE_BRUTO*B.TIPO_CAMBIO_EUR  AS SALDO_CONTABLE_EUR
			FROM
				Credito_Liq_Sin_Pas A
				,
				TIPO_DE_CAMBIO B 
			WHERE COMPRESS(UPCASE(B.DIVISA))='PEN';
QUIT;

/*PASO 3: HOMOLOGAMOS EL TIPO DE PRODUCTO PRESTAMOS*/
/*AHORA HOLDING QUIEREN UNA NUEVA PARAMETRIA PARA CALCULAR EL PRODUCTO PRESTAMOS,
ESTO LO CONSIGO DE FINREP USANDO FINALIDAD Y TIPO DE GARANTIA*/
PROC SQL;
	CREATE TABLE CREDITO_SECTOR_PRO_PREV AS
		SELECT A.*, CASE WHEN B.G013 NE "" THEN B.G013 ELSE "03" END AS G013
			FROM CREDITO_NOPIG_EUR A 
				LEFT JOIN PROD_PREST_FINREP_CRED B
					ON A.CONTRATO=B.CONTRATO;
QUIT;

/*PASO 4: HOMOLOGAMOS EL SEGMENTO FINREP*/
/*PASO 4.1: UN CONTRATO SOLO DEBERÍA TENER 1 SECTOR ASOCIADO*/
proc sql;
	create table &BIBLIOTECA..SECTOR_CONTRATO_CREDITOFIN2 as
		select CONTRATO, max(G004) as G004
			from &BIBLIOTECA..SECTOR_CONTRATO_CREDITOFIN
				group by 1;
quit;

/*PASO 4.2: SE ENRIQUECE EL SEGMENTO FINREP*/
PROC SQL;
	CREATE TABLE CREDITO_SECTOR_PRO AS 
		SELECT 
			A.*,B.G004 /*SEGMENTO FINREP*/
		FROM 
			CREDITO_SECTOR_PRO_PREV A
		LEFT JOIN
			&BIBLIOTECA..SECTOR_CONTRATO_CREDITOFIN2 B
			ON A.CONTRATO=B.CONTRATO;
QUIT;

/*PASO 5: PARA QUE NO SE REPITA EL ENRIQUECIMIENTO CON 
EL MARGEN FINANCIERO, SE DEBE QUITAR DUPLICADOS*/
PROC SQL;
	CREATE TABLE CREDITO_SECTOR_PRO2 AS
		SELECT CONTRATO, CTA_CONTABLE15CHAR, CTA_NEOCON, MAX(FECHA_VCTO) AS FECHA_VCTO,
			   MIN(FEAPERTU) AS FEAPERTU, G004, G013, INTERCOMPANY, SECTOR_CONTRAPARTE,  
			   TIPOLOGIA, DIVISA, SUM(SALDO_CONTABLE_BRUTO) AS SALDO_CONTABLE_BRUTO,
		       SUM(SALDO_CONTABLE_EUR) AS SALDO_CONTABLE_EUR
			   FROM CREDITO_SECTOR_PRO
					GROUP BY CONTRATO, CTA_CONTABLE15CHAR, CTA_NEOCON, G004, G013,
							 INTERCOMPANY, SECTOR_CONTRAPARTE,TIPOLOGIA,DIVISA;
QUIT;

/*PASO 6: SE TRATA A LAS OPERACIONES DEL DL521*/
/*PASO 6.1: SE DIVIDE EN DOS DATASET: LOS QUE TIENEN CONTRATO Y LOS QUE NO TIENEN CONTRATO*/
DATA CREDITO_SC CREDITO_CC;
FORMAT G013 $2.;
	SET CREDITO_SECTOR_PRO2;

	IF LENGTH(CONTRATO)>8 THEN
		OUTPUT CREDITO_CC;
	ELSE OUTPUT CREDITO_SC;
RUN;

/*PASO 6.2: SE PROCESA LAS QUE NO TIENEN CONTRATO PERO QUE TIENEN DEAL STAR*/
PROC SQL;
	CREATE TABLE CREDITOS_SC_DL521
		AS
			SELECT A.*,
				B.INGRESOS_GASTOS,B.INDICADOR_NEW_BUSSINES,B.TASA AS TIPOTAE, "F" AS TIPOTASA,B.DIAS,B.FECHA_CONTRATACIÓN AS FECHA_APER FORMAT = DATE10.

			FROM
				CREDITO_SC A
			LEFT JOIN
				DL521_VENC_PRO B
				ON
				COMPRESS(TRIM(A.CONTRATO))=COMPRESS(TRIM(B.DEAL_STAR));
QUIT;

/*PASO 6.3: SE OBTIENE EL EPIGRAFE LOCAL PARA LOS REGISTROS A TRAVES DE LA CTA CONTABLE*/
PROC SQL;
	CREATE TABLE CRSC_EPIGRAFE AS 
		SELECT A.*,B.'EPIGRAFE LOCAL'N FROM 
			CREDITOS_SC_DL521 A
		LEFT JOIN 
			Epigrafe_CContable_Format_dis B 
			ON B.CUENTA=A.CTA_CONTABLE15CHAR;
QUIT;

/*PASO 6.4: EN CASO QUE NO SE HALLA HOMOLOGADO LA MARCA DE NUEVO NEGOCIO 
SE HACE LA OPERATIVA DE ACUERDO A LA FECHA DE APERTURA*/
DATA CRSC_NB;
	SET CRSC_EPIGRAFE;

	IF INDICADOR_NEW_BUSSINES = '' AND YEAR(FECHA_APER)=INPUT(SUBSTR(&FECHAREPORTE,1,4),$8.) THEN
		INDICADOR_NEW_BUSSINES='S';
	ELSE IF INDICADOR_NEW_BUSSINES = '' AND YEAR(FECHA_APER) NE INPUT(SUBSTR(&FECHAREPORTE,1,4),$8.)  THEN
		INDICADOR_NEW_BUSSINES='N';
RUN;

/*PASO 6.5: SE HOMOLOGA EL PRODUCTO DE ACUERDO A LA 
FINALIDAD ESTO SE HACE POR LA CUENTA CONTABLE*/
PROC SQL;
	CREATE TABLE CRSC_PRODUCTOS AS 
		SELECT 
			A.*,
			CASE WHEN B.VALOR NE '' THEN B.VALOR ELSE "03" END  AS G013
		FROM
			CRSC_NB(DROP=G013) A 
		LEFT JOIN
			&BIBLIOTECA..H_PRODUCTO_PRESTAMOS B
			ON
			A.CTA_CONTABLE15CHAR LIKE B.CTA_CONTABLE;
QUIT;

/*PASO 6.6: SE HOMOLOGA EL SECTOR*/
PROC SQL;
	CREATE TABLE CRSC_PRODUCTOS_SEC AS 
		SELECT A.*,
			B.VALOR AS G004
		FROM
			CRSC_PRODUCTOS(DROP=G004) A
		LEFT JOIN
			&BIBLIOTECA..H_SECTOR_PRESTAMOS B
			ON
			A.SECTOR_CONTRAPARTE=B.SECTOR AND B.TIPOLOGIA='';
QUIT;

/*PASO 7: AHORA SE PROCESA LA PARTE QUE SI TIENE CONTRATO*/
/*PASO 7.1: SE CARGA EL TEPIRELA*/
PROC SQL;
	CREATE TABLE CRCC_EPIGRAFE AS 
		SELECT A.* ,B.'EPIGRAFE LOCAL'N AS EPIGRAFE
			FROM
				CREDITO_CC A 
			LEFT JOIN
				Epigrafe_CContable_Format_dis B
				ON A.CTA_CONTABLE15CHAR=B.CUENTA
			ORDER BY CONTRATO
	;
QUIT;

/*PASO 7.2: SE AGRUPA A LOS INVENTARIOS POR LAS VARIABLES A 
CRUZAR PARA NO TENER AUMENTO DE REGISTROS*/
PROC SQL;
CREATE TABLE TABLON_INVENTARIOS_FECHA_B AS
	SELECT CONTRATO,EPIGRAFE_55,DIVISA,
		   CTA_PRINCIPAL_TEXTO,PERRENOV, 
		   SUM(TIPOREF*SALDO_INVENTARIO)/SUM(SALDO_INVENTARIO)
		   AS TIPOREF, CLASREF, INDICADOR_NEW_BUSSINES,
		   SUM(SALDO_MEDIO) AS SALDO_MEDIO,SUM(INGRESOS_GASTOS)
		   AS INGRESOS_GASTOS, TIPOTASA,
		   SUM(TIPOTAE*SALDO_INVENTARIO)/SUM(SALDO_INVENTARIO)
		   AS TIPOTAE
		   FROM &BIBLIOTECA..INVENTARIOS_MIS_CFECHA
			   GROUP BY CONTRATO,EPIGRAFE_55,DIVISA,
						CTA_PRINCIPAL_TEXTO,PERRENOV,CLASREF,
						INDICADOR_NEW_BUSSINES,TIPOTASA;
QUIT;

/*PASO 7.3: ENRIQUECEMOS CON INFORMACION DE LOS INVENTARIOS MIS*/
PROC SQL;
	CREATE TABLE CRCC_SALDO_MEDIO AS 
		SELECT A.*,
			B.TIPOTAE,B.PERRENOV, B.TIPOREF, B.CLASREF,		
			B.INDICADOR_NEW_BUSSINES,
			B.SALDO_MEDIO,
			B.INGRESOS_GASTOS,
			B.TIPOTASA	
		FROM
			CRCC_EPIGRAFE A 
		LEFT JOIN
			TABLON_INVENTARIOS_FECHA_B B
			ON A.CONTRATO=B.CONTRATO 
			AND A.'EPIGRAFE'N=B.EPIGRAFE_55
			AND A.DIVISA=B.DIVISA
			AND A.CTA_CONTABLE15CHAR=B.CTA_PRINCIPAL_TEXTO;
QUIT;

/*PASO 7.4: SE NECESITA TRABAJAR CON LA FECHA DE APERTURA EN FORMATO FECHA ASI COMO TAMBIEN CALCULAR LOS DIAS QUE FALTAN PARA EL VENCIMIENTO*/
DATA CR_FECHA(DROP= ANIO_FEC VENCIM1); 

	FORMAT FECHA_APER DATE10.;
	FORMAT VENCIM1 DATE10.;

	SET CRCC_SALDO_MEDIO;

	FECHA_APER = INPUT(FEAPERTU,DDMMYY10.);
	VENCIM1 = INPUT(FECHA_VCTO,DDMMYY10.); /*PARA CALCULOS EN ESTE DATA SET*/

	ANIO_FEC = YEAR(FECHA_APER);

	IF ANIO_FEC <= 1900 THEN
		DO;
			FECHA_APER = .;
		END;

	DIAS=VENCIM1-FECHA_APER;
RUN;

/*PASO 8: SE JUNTAN LAS BASES CON CONTRATO Y SIN CONTRATO*/
DATA CR_CCSC_JUNTOS;
	SET CRSC_PRODUCTOS_SEC CR_FECHA;
RUN;

/*PASO 9: SE HOMOLOGAN PRIMEROS CAMPOS*/
DATA CR_HOMOLOGACIONES;
	SET CR_CCSC_JUNTOS;
	G001="&FECHAREPORTE";
	G002="&SOCIEDAD_INFORMANTE";
	G003='02';
	G006='';
	G005='';
	G010='';
	G011='';
	G014='';
	G015='';
	G018='N';
RUN;

/*PASO 10: PARA EVITAR EL AGRUPAMIENTO ENTRE VALORES NULOS SE HACE UNA MARCA PARA CADA IMPORTE NUMERICO*/
DATA CR_MARCA_SALDOS;
	SET CR_HOMOLOGACIONES;

	IF SALDO_MEDIO=. THEN
		MARCASM='N';
	ELSE MARCASM='S';

	IF SALDO_CONTABLE_BRUTO=. THEN
		MARCASC='N';
	ELSE MARCASC='S';

	IF INGRESOS_GASTOS=. THEN
		MARCAGASTOS='N';
	ELSE MARCAGASTOS='S';
RUN;

/*PASO 11: AHORA SE TRAE DE FINREP EL CAMPO C0973 */
PROC SQL;
	CREATE TABLE CR_MARCA_SALDOS_HIP AS
		SELECT A.*, (CASE WHEN B.C0973 NE "" THEN B.C0973 ELSE "N" END) AS C0973 
		/*PARA LOS CONTRATOS FICTICIOS (CUYOS CONTRATOS NO ESTAN EN FINREP) SE LES PONE "N" (NO APLICA)*/
			FROM CR_MARCA_SALDOS A LEFT JOIN MARCAHIP_CONTRATO B
				ON A.CONTRATO = B.CONTRATO;
QUIT;

/*PASO 12: SE HACE EL AGRUPAMIENTO POR EL CONTRATO*/
PROC SQL;
	CREATE TABLE CR_AGRUPADOS AS 
		SELECT 
		CONTRATO,
			CLASREF,
			CTA_CONTABLE15CHAR,
			CTA_NEOCON,
			EPIGRAFE,
			FECHA_VCTO,
			FECHA_APER,
			G001,
			G002,
			G003,
			G004,
			G005,
			G006,
			G010,
			G011,
			G013,
			G014,
			G015,
			G018,
			INDICADOR_NEW_BUSSINES,
			INTERCOMPANY,
			PERRENOV,
			SECTOR_CONTRAPARTE,
			TIPOREF,
			TIPOTASA,
			TIPOLOGIA,
			DIAS,
			DIVISA,
			C0973,
			MARCAGASTOS,
			MARCASC,
			MARCASM,
			TIPOTAE,
			SUM(SALDO_CONTABLE_BRUTO) AS SALDO_CONTRAVALORADO,
			SUM(SALDO_CONTABLE_EUR) AS SALDO_EUR,
			SUM(SALDO_MEDIO) AS SALDO_MEDIO,
			SUM(INGRESOS_GASTOS) AS INGRESOS_GASTOS
		FROM
			CR_MARCA_SALDOS_HIP 
		GROUP BY 
		CONTRATO,
			CLASREF,
			CTA_CONTABLE15CHAR,
			CTA_NEOCON,
			EPIGRAFE,
			FECHA_VCTO,
			FECHA_APER,
			G001,
			G002,
			G003,
			G004,
			G005,
			G006,
			G010,
			G011,
			G013,
			G014,
			G015,
			G018,
			INDICADOR_NEW_BUSSINES,
			INTERCOMPANY,
			PERRENOV,
			SECTOR_CONTRAPARTE,
			TIPOREF,
			TIPOTASA,
			TIPOLOGIA,
			DIAS,
			DIVISA,
			C0973,
			MARCAGASTOS,
			MARCASC,
			MARCASM,
			TIPOTAE;
QUIT;

/*PASO 13: SE HOMOLOGA EL EPIGRAFE Y EL INTERCOMPANY*/
DATA CR_TERRIOTORIO_D;
SET CR_AGRUPADOS;
	G009='EPIGRAFE'N;
/*SE HOMOLOGA EL CAMPO SI ES INTERCOMPANY TERCEROS O NO*/
	IF INTERCOMPANY ='Tercero' THEN
		G012= 'TER';
	ELSE  
		G012='INT';
RUN;

/*PASO 14: SE HOMOLOGA LA DIVISA*/
PROC SQL;
	CREATE TABLE CR_DIVISA AS
		SELECT A.*,CASE WHEN B.VALOR NE '' THEN B.VALOR ELSE "XXX" END AS G016
			FROM CR_TERRIOTORIO_D A
				LEFT JOIN &BIBLIOTECA..H_DIVISA B
					ON A.DIVISA=B.VALOR;
QUIT;

/*PASO 15: SE HOMOLOGA EL TIPO DE TASA*/
DATA CR_TIPO_F;
SET CR_DIVISA;
	G017=TIPOTASA;
	IF TIPOTASA='M' THEN
		G017='F';
RUN;

/*PASO 16: SE HOMOLOGA EL TRAMO DE TIPO INTERES, EN CASO DE SER MORA SE ASIGNA A LA COLUMNA CORRESPONDIENTE*/
PROC SQL;
	CREATE TABLE CR_TRAMOS_INT AS 
		SELECT 
			A.*, B.TIPO_TRAMO AS G019

		FROM
			CR_TIPO_F A
		LEFT JOIN
			&BIBLIOTECA..H_TRAMOS_TIPO B
			ON
			A.TIPOTAE>B.COTA_INFERIOR 
			AND 
			A.TIPOTAE<=B.COTA_SUPERIOR
;
QUIT;

/*PASO 17: SE DETERMINA EL INDICE DE REFERENCIA*/
PROC SQL;
	CREATE TABLE CR_TRAMOS_INT_G21 AS
		SELECT A.*, CASE WHEN A.G017='V' THEN B.VALOR ELSE "" END AS G021,

		/*AHORA NOS PIDEN EL PLAZO DE REFERENCIA*/
					CASE WHEN A.G017='V' THEN COALESCE(B.PERIODO_RENOVACION_DIAS,0) ELSE . END AS PLAZOREF,

		CASE WHEN A.G017='V' THEN B.PERIODO_RENOVACION_DIAS ELSE . END  AS DIAS_R
			FROM
				CR_TRAMOS_INT A
			LEFT JOIN
				&BIBLIOTECA..H_CURVA_FINREP B 
				ON 
				A.DIVISA =B.DIVISA 
				AND 
				A.CLASREF=B.CURVA
				AND 
				A.PERRENOV=B.PERRENOV;
QUIT;

/*PASO 18: SE DETERMINA EL PERIODO DE REVISION*/
PROC SQL;
	CREATE TABLE CR_PERIODO_REVISION_G24 AS 
		SELECT A.*, CASE WHEN A.G017='V' THEN B.VALOR ELSE "" END  AS G024
			FROM
				CR_TRAMOS_INT_G21 A 
			LEFT JOIN
				&BIBLIOTECA..H_REVISION B
				ON
				A.PERRENOV=B.PERRENOV;
QUIT;

/*PASO 19: SE TIENE QUE SACAR LA FECHA DE REVISION */
DATA CR_TRAMOS_REVISION_PREV;
	FORMAT FE_REV DDMMYY10.;
	SET CR_PERIODO_REVISION_G24;
	FE_REV=&ONEMONTHAGO+DIAS_R;
	TIPREFF=TIPOREF/100;
	SPREAD=(TIPOTAE-TIPOREF)/100;
RUN;

/*PASO 20: SE HOMOLOGA EL TRAMO DE REVISION*/
PROC SQL;
	CREATE TABLE CR_TRAMOS_REVISION (DROP= DIAS_R)AS 
		SELECT A.*,CASE WHEN A.G017='V' THEN B.VALOR ELSE "" END AS G028
			FROM
				CR_TRAMOS_REVISION_PREV A
			LEFT JOIN
				&BIBLIOTECA..H_TRAMOS_VENCIMIENTO B

				ON 
				A.FE_REV>=COTA_INFERIOR
				AND A.FE_REV<=COTA_SUPERIOR;
QUIT;

/*PASO 21: SE TIENE QUE TRAMEAR LA REF;*/
PROC SQL;
	CREATE TABLE CR_TIPO_REF AS 
		SELECT 
			A.*,
		
		 B.TIPO_TRAMO AS G022

		FROM
			CR_TRAMOS_REVISION A
		LEFT JOIN
			&BIBLIOTECA..H_TRAMOS_TIPO B
			ON
			A.TIPREFF*100>B.COTA_INFERIOR 
			AND 
			A.TIPREFF*100<=B.COTA_SUPERIOR
;
QUIT;

/*PASO 22: SE HOMOLOGA EL SPREAD*/
PROC SQL;
	CREATE TABLE CR_SPREAD_TRM AS 
		SELECT 
			A.*,
		
		 B.TIPO_TRAMO AS G023

		FROM
			CR_TIPO_REF A
		LEFT JOIN
			&BIBLIOTECA..H_TRAMOS_TIPO B
			ON
			A.SPREAD*100>B.COTA_INFERIOR 
			AND 
			A.SPREAD*100<=B.COTA_SUPERIOR;
QUIT;

/*PASO 23: SE DA FORMATO A LAS FECHAS*/
DATA CR_SPREAD_TRM2(DROP=FECHA_VCTO RENAME=(FECHA_VCTO2 = FECHA_VCTO));
SET CR_SPREAD_TRM;
	FORMAT FECHA_VCTO2 DDMMYY10.;
	FECHA_VCTO2 = INPUT(FECHA_VCTO,DDMMYY10.);
RUN;

/*PASO 24: SE TRAE DE CREDITO FINREP EL NUEVO_SECTOR*/
/*PASO 24.1: EL SECTOR FINREP DEBE SER UNICO A NIVEL CONTRATO*/
PROC SQL;
	CREATE TABLE NEW_SECTOR_CONTRATO_CREDITOFIN2 AS
		SELECT CONTRATO, MAX(NUEVO_SECTOR) AS NUEVO_SECTOR
			FROM NUEVO_SECTOR_CONTRATO_CREDITOFIN
				GROUP BY 1;
QUIT;

/*PASO 24.2: SE ENRIQUECE EL NUEVO_SECTOR*/
PROC SQL;
	CREATE TABLE CR_VENCIMIENTO_ORIG_PREV  AS 
		SELECT A.*,
			B.NUEVO_SECTOR AS NUEVO_SECTOR
		FROM
			CR_SPREAD_TRM2 A
		LEFT JOIN
			NEW_SECTOR_CONTRATO_CREDITOFIN2 B
			ON
			A.CONTRATO = B.CONTRATO;
QUIT;

/*PASO 25: PARA LOS CONTRATOS FICTICIOS SE APLICA LA PARAMETRIA DE LIQUIDEZ*/
PROC SQL;
	CREATE TABLE CR_VENCIMIENTO_ORIG_PREV2
		(DROP = NUEVO_SECTOR RENAME = (NUEVO_SECTOR2 = NUEVO_SECTOR))AS 
		SELECT A.*,
			(CASE WHEN A.NUEVO_SECTOR = "" THEN B.NUEVO_SECTOR ELSE A.NUEVO_SECTOR END) AS NUEVO_SECTOR2
		FROM
			CR_VENCIMIENTO_ORIG_PREV A
		LEFT JOIN
			&BIBLIOTECA..H_SECTOR_PRESTAMOS B
			ON
			A.SECTOR_CONTRAPARTE=B.SECTOR AND B.TIPOLOGIA='';
QUIT;

/*PASO 26: SE HOMOLOGA NUEVOS CAMPOS DE STRESS TEST*/
DATA CR_VENCIMIENTO_ORI2 (RENAME=(FECHA_APER = FEAPERTU));
	
	SET CR_VENCIMIENTO_ORIG_PREV2;
	

	SPREAD = SPREAD *100; /*LO PASAMOS A FORMATO % PARA QUE ESTE IGUAL QUE TIPOTAE Y TIPOREF*/

	G025=INDICADOR_NEW_BUSSINES;
	G026 = "";

	A001=(SALDO_EUR );
	A002=ABS(SALDO_MEDIO); /*SALDO_MEDIO VIENE DE INVENTARIOS_MIS_CFECHA*/

	A009=INGRESOS_GASTOS; /*INGRESOS_GASTOS VIENE DE INVENTARIOS_MIS_CFECHA*/

	C1014 = ""; /*TIPO DE EMISIÓN FINREP VACIO PORQUE NO ESTAMOS EN EMISIONES*/
RUN;

/*PASO 27: RENOMBRAMOS LAS FECHAS*/
DATA CR_IMPORTES_CUOTAS (RENAME=(FECHA_VCTO = FECHA_VENCIMIENTO FEAPERTU=FECHA_APERTURA));
SET CR_VENCIMIENTO_ORI2;
RUN;

/*PASO 28: SE CARGA LA FECHA DE BAJA DE INVENTARIOS MIS*/
PROC SQL;
	CREATE TABLE CREDITO_FECANCEL AS
		SELECT A.*, B.FECANCEL
			FROM CR_IMPORTES_CUOTAS A LEFT JOIN INVENTARIOS_MIS_SALDO_FECANCEL B
				ON A.CONTRATO =  B.CONTRATO;			
QUIT;

/*PASO 29: SE DA FORMATO A LAS FECHAS Y RENOMBRA CAMPOS*/
DATA CREDITO_PREVIO
(
DROP=FECANCEL
RENAME=(FECANCEL2 = FECANCEL G003=INSTRUMENTO G004 = SEGMENTO_FINREP G013 = PROD_PRESTAMOS G014 = PROD_DEPOSITOS
	  	 G015 = PROD_EMIRF G025 = INDNEWBUS));
SET CREDITO_FECANCEL;

	IF (FECANCEL = "00010101") THEN
		FECANCEL = "";

	FECANCEL2 = INPUT(FECANCEL,YYMMDD8.);
	FORMAT FECANCEL2 DATE10.;

RUN;

/*PASO 30: SE HOMOLOGA INDICADORES MATURING BUSINESS Y OPERATIVA VIVA*/
DATA CREDITO_PREVIO2;
SET CREDITO_PREVIO;
	FORMAT INDOPERVIVA $1.;
	FORMAT INDMATBUS $1.;

	INDOPERVIVA = "V"; 
	ANIODATOS = SUBSTR(G001,1,4);

	IF(ANIODATOS = YEAR(FECANCEL)) THEN
		DO;
			INDMATBUS = "S";
			A001 = 0; /*LAS OPERATIVAS VENCIDAS NO DEBEN TENER SALDO PUNTUAL A CIERRE DE MES*/
			INDOPERVIVA = "F";
		END;
		
	ELSE	
		INDMATBUS = "N";

RUN;

/*PASO 31: SE HOMOLOGA EL TAMAÑO DE EMPRESA*/
PROC SQL;
	CREATE TABLE CREDITO_PREVIO3 AS
		SELECT A.*, B.C0005
			FROM CREDITO_PREVIO2 A LEFT JOIN TIPOLOGIA_CONTRATO B
				ON A.CONTRATO = B.CONTRATO;
QUIT;

/*PASO 32: SI ES QUE EL CONTRATO NO ESTA EN FINREP, ENTONCES SE USA EL SEGMENTO FINREP
PARA DETERMINAR EL TAMAÑO DE LA EMPRESA*/
data CREDITO_PREVIO4;
set CREDITO_PREVIO3;
	if (C0005 = "") then
		do;
			if(SEGMENTO_FINREP="004") then
				C0005 = "P";
			else if (SEGMENTO_FINREP="005") then
				C0005 = "G";
		end;
run;

/*PASO 33: SE SELECCIONA LOS CAMPOS EXIGIDOS A NIVEL CONTRATO*/
proc sql;
	create table CR_Salida_Final_2017_contr as
		select contrato as C0000 format = $18.,Nuevo_Sector as C0001 format = $25., C0005,
			A001 as C0016, G001 as C0019,
			G002 as C0020, Intercompany as C0021, G016 as C0022, G017 as C0023, G018 as C0024, G019 as C0025,
			tipotae as C0026, G021 as C0027, TIPOREF as C0028, SPREAD as C0029,
			G024 as C0030, fe_rev as C0038, Fecha_apertura as C0039, FECANCEL as C0040,
			abs(A002) as C0041, Fecha_Vencimiento as C0050, G023 as C0052, 
			A009 as C0067, . as C0068,
			"PE" as C0900, "PEN" as C0901, C0973, G028 as C1010 format = $2., C1014,

			Cta_NEOCON as Cuenta_NEOCON, Cta_Contable15char as cta_contable,

			PlazoRef, Instrumento, Segmento_FINREP, Prod_Prestamos, Prod_Depositos, Prod_EmiRF, 
			"" as Prod_Derivados format = $2., IndNewBus, IndOperViva, IndMatBus, dias, G012 as Marca_Intergrupo
		from  

			CREDITO_PREVIO4 ;
quit;


/*PASO 34: SE HACE LA UNION LIQUIDEZ - FINREP CREDITO*/
/*PASO 34.1: SE CALCULA EL MAYOR DE CREDITO FINREP*/
DATA FINREP_CUENTAS_PREV;
SET CRFINREP_SALIDA_FINAL_2017_CONTR;
	FORMAT MAYOR $4.;
	MAYOR = CATS(SUBSTR(CTA_CONTABLE,1,2),"0",SUBSTR(CTA_CONTABLE,4,1));	
RUN;

/*PASO 34.2: SE SELECCIONAN LAS CUENTAS A TOMAR DE FINREP*/
PROC SQL;
	CREATE TABLE FINREP_CUENTAS AS
		SELECT *
			FROM FINREP_CUENTAS_PREV
				WHERE(MAYOR NOT IN 
				(SELECT CUENTA FROM &BIBLIOTECA..H_UNION_CREDIT_FIN_LIQ));
QUIT;

/*PASO 34.3: SE CALCULA EL MAYOR DE CREDITO LIQUIDEZ*/
DATA LIQUIDEZ_CUENTAS_PREV;
SET CR_SALIDA_FINAL_2017_CONTR;
	FORMAT MAYOR $4.;
	MAYOR = CATS(SUBSTR(CTA_CONTABLE,1,2),"0",SUBSTR(CTA_CONTABLE,4,1));	
RUN;

/*PASO 34.4: SE SELECCIONAN LAS CUENTAS A TOMAR DE LIQUIDEZ*/
PROC SQL;
	CREATE TABLE LIQUIDEZ_CUENTAS AS
		SELECT *
			FROM LIQUIDEZ_CUENTAS_PREV
				WHERE(MAYOR IN 
				(SELECT CUENTA FROM &BIBLIOTECA..H_UNION_CREDIT_FIN_LIQ));
QUIT;

/*PASO 35: SE CONSOLIDA CREDITO LIQUIDEZ + FINREP EN UN SOLO TABLON*/
DATA CRTOTAL_SALIDA_FINAL_2017_prev;
SET FINREP_CUENTAS LIQUIDEZ_CUENTAS;
RUN;

/*PASO 36: SI EXISTEN SEGMENTOS VACIOS, SE RELLENAN CON EL SECTOR OBTENIDO EN FINREP*/
/*PASO 36.1: SE GENERA LA PARAMETRIA PARA RELLENAR LOS CASOS EN QUE NO ESTE
INFORMADO EL SEGMENTO FINREP
EL MIN ES NECESARIO PARA QUE SNF APUNTE A "004"*/
PROC SQL;
	CREATE TABLE &BIBLIOTECA..SECTOR_NO_VIVAS_CREDIT AS
		SELECT C0001, MIN(SEGMENTO_FINREP) AS SEGMENTO_FINREP
			FROM &BIBLIOTECA..SECTOR_NO_VIVAS
				WHERE(INSTRUMENTO="02")
					GROUP BY 1;
QUIT;

/*PASO 36.2: SE RELLENA CON EL CAMPO C0001 CUANDO EL SEGMENTO FINREP NO ESTA INFORMADO*/
proc sql;
	create table CRTOTAL_SALIDA_FINAL_2017_CONTR
		(drop=SEGMENTO_FINREP rename=(New_Segmento_Finrep = SEGMENTO_FINREP))as
		select a.*, 
			case when a.SEGMENTO_FINREP = "" then b.Segmento_Finrep 
					  else a.SEGMENTO_FINREP end as New_Segmento_Finrep
				from CRTOTAL_SALIDA_FINAL_2017_prev a LEFT JOIN &biblioteca..Sector_No_Vivas_Credit b
					ON a.C0001 = b.C0001;
quit;

/*PASO BACKUP: SE CONSOLIDA CREDITO LIQUIDEZ + FINREP EN UN SOLO TABLON CON CODIGO DURO*/
/*DATA CRTOTAL_SALIDA_FINAL_2017_CONTR;*/
/*SET FINREP_CUENTAS LIQUIDEZ_CUENTAS;*/
/*	IF (SEGMENTO_FINREP = "") THEN*/
/*		DO;*/
/*			IF (C0001 IN ("BC","MDB","APC")) THEN*/
/*				DO;*/
/*					SEGMENTO_FINREP = "001";*/
/*				END;*/
/*			ELSE IF (C0001 IN ("EC","OIF")) THEN*/
/*				DO;*/
/*					SEGMENTO_FINREP = "003";*/
/*				END;	*/
/*			ELSE IF (C0001 ="SNF") THEN*/
/*				DO;*/
/*					SEGMENTO_FINREP = "004";*/
/*				END;*/
/*			ELSE IF (C0001 IN ("P","A")) THEN*/
/*				DO;*/
/*					SEGMENTO_FINREP = "006";*/
/*					PROD_PRESTAMOS = "03";*/
/*				END;*/
/*			*/
/*		END;*/
/*RUN;*/








/*backUp antigua division credito liquidez - FINREP:*/
/*cruzamos a nivel contrato y cuenta vs FINREP y traemos lo que le falta a Liquidez*/
/*Se seleccionan las operaciones de FINREP que no estan en Liquidez
a nivel de contrato y cuenta contable*/
/*No importan los duplicados, porque solo nos quedamos con los registros que no cruzan*/
/*proc sql;*/
/*	create table credito_propios_finrep as*/
/*		select a.**/
/*			from CRFinrep_Salida_Final_2017_contr a LEFT JOIN CR_Salida_Final_2017_contr b*/
/*				ON a.C0000  = b.C0000 AND a.cta_contable = b.cta_contable*/
/*					where(b.C0000 = "");*/
/*quit;*/
/*End backUp*/

/*Borramos todas las tablas intermedias que ya no se usan para liberar espacio en la memoria*/
%borrarTabla(Credito_Liq_Sin_Pas);
%borrarTabla(Credito_nopig_Eur);
%borrarTabla(CREDITO_SECTOR_PRO_prev);
%borrarTabla(CREDITO_SECTOR_PRO);
%borrarTabla(CREDITO_SECTOR_PRO2);
%borrarTabla(CREDITO_SC);
%borrarTabla(CREDITO_CC);
%borrarTabla(Creditos_sC_Dl521);
%borrarTabla(CRSC_Epigrafe);
%borrarTabla(CRSC_NB);
%borrarTabla(CRSC_Productos);
%borrarTabla(CRSC_Productos_sec);
%borrarTabla(CRCC_Epigrafe);
%borrarTabla(Tablon_inventarios_Fecha_b);
%borrarTabla(CRCC_SALDO_MEDIO);
%borrarTabla(CR_Fecha);
%borrarTabla(CR_CCSC_Juntos);
%borrarTabla(CR_NoFin);
%borrarTabla(CR_Homologaciones);
%borrarTabla(CR_MARCA_SALDOS);
%borrarTabla(CR_MARCA_SALDOS_Hip);
%borrarTabla(CR_Agrupados);
%borrarTabla(CR_Terriotorio_D);
%borrarTabla(CR_Divisa);
%borrarTabla(CR_Tipo_F);
%borrarTabla(CR_Tramos_Int);
%borrarTabla(CR_Tramos_Int_g21);
%borrarTabla(Cr_Periodo_Revision_g24);
%borrarTabla(CR_TRAMOS_REVISION_PREV);
%borrarTabla(CR_TRAMOS_REVISION);
%borrarTabla(CR_Tipo_Ref);
%borrarTabla(CR_Spread_Trm);
%borrarTabla(CR_Spread_Trm2);
%borrarTabla(CR_Vencimiento_Orig_Prev);
%borrarTabla(CR_Vencimiento_Orig_Prev2);
%borrarTabla(CR_Vencimiento_Ori2);
%borrarTabla(CR_IMPORTES_CUOTAS);
%borrarTabla(CREDITO_FECANCEL);
%borrarTabla(CREDITO_PREVIO);
%borrarTabla(CREDITO_PREVIO2);
%borrarTabla(CREDITO_PREVIO3);
%borrarTabla(CREDITO_PREVIO4);


%borrarTabla(CR_Salida_Final_2017_contr);
%borrarTabla(liquidez_cuentas_prev);
%borrarTabla(liquidez_cuentas);
%borrarTabla(CRFinrep_Salida_Final_2017_contr);
%borrarTabla(finrep_cuentas_prev);
%borrarTabla(finrep_cuentas);

%borrarTabla(CRTOTAL_SALIDA_FINAL_2017_prev);