*---------------------------------------------------------------------------------------;
*							Pledged Loans - Export to TXT;
*							Author: Management Solutions;
*---------------------------------------------------------------------------------------;

/* Macro used to export to a TXT file the table generated in SAS */

/*%macro exportToTXT(table_name, filename);*/
/**/
/*	%let left = /SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/;*/
/*	%let right = .txt;*/
/*	%let dir = &left.&filename.&right;*/
/*	%let directory = "&dir";*/
/**/
/*	data _null_ ;*/
/*		file "&left.&filename.&right" lrecl=100000 dsd dlm='|' ;*/
/*		set &table_name.; */
/*		put (_ALL_);*/
/*	run ;*/
/**/
/*%mend exportToTXT;*/


%macro exportToTXT(table_name,filename);
* Export excel validation file;
%let left = /SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/;
%let right = .txt;
%let dir = &left.&filename.&right;
%let directory = "&dir";

proc export 
	data=&table_name. 
	outfile = %str(&directory)
	dbms=dlm replace;
	delimiter='|';
	putnames=no;
run;

%mend exportToTXT;

/*Macro to apply all the DQ checks to the portfolios before exporting to TXT
If any check is NO OK then the details are exported to an Excel*/
%Macro Checks_No_OK(dataset, file, sheet);

DATA _NULL_;
SET &dataset;
	CALL SYMPUT('flag_NO_OK',0);
	ARRAY Checks{*} _CHARACTER_;
	DO i=1 to DIM(Checks);
		IF Checks(i) = "KO" THEN
			DO;
				CALL SYMPUT('flag_NO_OK',1);
				LEAVE;
			END;
	END;
RUN;

%if &flag_NO_OK = 1 %then
	%do;
		proc export data=&dataset
		outfile="&file"
		DBMS=XLSX REPLACE;
		sheet="&sheet";
		run;
	%end;

%Mend Checks_No_OK;


/* Credit cards */ 

PROC SQL;
	CREATE TABLE HEADER_CC AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., 'CREDIT CARDS' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 842 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.CREDIT_CARDS_FINAL;
QUIT;


PROC SQL;
	CREATE TABLE TRAILER_CC AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE_CC) AS TOTAL_BAL FORMAT = 15.2,
		. AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.CREDIT_CARDS_FINAL;
QUIT;


PROC SQL;
	CREATE TABLE CREDIT_CARDS_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		CREDIT_BUREAU_SCORE_SEGMENT,
		BALANCE_CC FORMAT = 15.2 AS BALANCE_CC,
		CREDIT_BUREAU_SCORE FORMAT = 3.0 AS CREDIT_BUREAU_SCORE,
		APR FORMAT = 5.2 AS APR,
		CALL_REPORT_CODE
	FROM PLEDGED.CREDIT_CARDS_FINAL;
QUIT;


PROC SQL;
	CREATE TABLE VALID_CREDIT_CARDS AS
	SELECT DISTINCT
		CASE WHEN LENGTH(CREDIT_BUREAU_SCORE_SEGMENT) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(CALL_REPORT_CODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK
	FROM CREDIT_CARDS_EXPORT;
QUIT;


%Checks_No_OK(VALID_CREDIT_CARDS, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/CREDIT_CARDS_NO_OK.xlsx,
CreditCards);


%exportToTXT(HEADER_CC,HEADER_CC);
%exportToTXT(TRAILER_CC,TRAILER_CC);
%exportToTXT(CREDIT_CARDS_EXPORT,CREDITCARDS);


/* Agricultural */

PROC SQL;
	CREATE TABLE HEADER_AGRIC AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186705U102BIC1' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 705 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.AGRICULTURAL_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_AGRIC AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		. AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.AGRICULTURAL_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE AGRICULTURAL_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		OBLIGORNAME,
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		MASTERNOTEREFERENCENUMBER, 
		MASTERNOTEORIGBAL,
		MASTERNOTECURRCOMMAM,
		MASTERNOTEMATDATE,
		CASE
			WHEN UPPER(INTERESTFREQUENCY) IN ('M', 'MONTHLY') THEN 'M'
			WHEN UPPER(INTERESTFREQUENCY) IN ('Q', 'QUARTERLY') THEN 'Q'
			WHEN UPPER(INTERESTFREQUENCY) IN ('S', 'SEMI-ANNUALLY') THEN 'S'
			WHEN UPPER(INTERESTFREQUENCY) IN ('A', 'ANNUALLY') THEN 'A'
			WHEN UPPER(INTERESTFREQUENCY) IN ('P', 'PAYABLE AT MATURITY') THEN 'P'
			WHEN UPPER(INTERESTFREQUENCY) IN ('N', 'NONE') THEN 'N'
		END AS INTERESTFREQUENCY,
		CASE
			WHEN UPPER(PRINCIPALPAYMENTFREQUENCY) IN ('M', 'MONTHLY') THEN 'M'
			WHEN UPPER(PRINCIPALPAYMENTFREQUENCY) IN ('Q', 'QUARTERLY') THEN 'Q'
			WHEN UPPER(PRINCIPALPAYMENTFREQUENCY) IN ('S', 'SEMI-ANNUALLY') THEN 'S'
			WHEN UPPER(PRINCIPALPAYMENTFREQUENCY) IN ('A', 'ANNUALLY') THEN 'A'
			WHEN UPPER(PRINCIPALPAYMENTFREQUENCY) IN ('P', 'PAYABLE AT MATURITY') THEN 'P'
			WHEN UPPER(PRINCIPALPAYMENTFREQUENCY) IN ('N', 'NONE') THEN 'N'
		END AS PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		DIINTERNALRISKRATING,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		AMORTIZATIONSTARTDATE,
		AMORTIZATIONENDDATE,
		INTERESTRATEINDEX,
		INTERESTRATESPREAD,
		INTERESTRATECAP,
		INTERESTRATEFLOOR,
		COLLATERALIZEDFLAG,
		CALLREPORTCODE,
		INDUSTRYCODE,
		INDUSTRYCODETYPE
	FROM PLEDGED.AGRICULTURAL_FINAL;
QUIT;


PROC SQL;
	CREATE TABLE VALID_AGRICULTURAL AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(MASTERNOTEREFERENCENUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK,
		CASE WHEN INTERESTFREQUENCY IN ('M','Q','S','A','P','N') THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK2,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD13_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD21_CHECK,
		CASE WHEN LENGTH(DIINTERNALRISKRATING) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD22_CHECK,
		CASE WHEN LENGTH(INTERESTRATEINDEX) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD27_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD32_CHECK,
		CASE WHEN LENGTH(INDUSTRYCODE) <= 6 THEN 'OK' ELSE 'KO' END AS FIELD33_CHECK
	FROM AGRICULTURAL_EXPORT;
QUIT;


%Checks_No_OK(VALID_AGRICULTURAL, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/VALID_AGRICULTURAL_NO_OK.xlsx,
Agricultural);

%exportToTXT(HEADER_AGRIC,HEADER_AGRIC);
%exportToTXT(TRAILER_AGRIC,TRAILER_AGRIC);
%exportToTXT(AGRICULTURAL_EXPORT,AGRICULTURAL);


/* Commercial Loans */

PROC SQL;
	CREATE TABLE HEADER_CL AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186710U102BIC1' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 710 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.CL_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_CL AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		SUM(CURRENTCOMMITMENT) AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.CL_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE CL_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		OBLIGORNAME,
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		MASTERNOTEREFERENCENUMBER, 
		MASTERNOTEORIGBALCOMM,
		MASTERNOTECURRCOMMAM,
		MASTERNOTEMATURITYDATE,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		DIINTERNALRISKRATING,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		CURRENTCOMMITMENT,
		AMORTIZATIONSTARTDATE,
		AMORTIZATIONENDDATE,
		INTERESTRATEINDEX,
		INTERESTRATESPREAD,
		INTERESTRATECAP,
		INTERESTRATEFLOOR,
		DRAWDOWNTYPE,
		DRAWPERIODENDDATE,
		RESIDUALVALUE,
		MOSTRECENTLEVERAGE,
		DATAMOSTRECENTLEVERAGE,
		LEVERAGEATORIGINATION,
		COLLATERALIZEDFLAG,
		CALLREPORTCODE,
		INDUSTRYCODE,
		INDUSTRYCODETYPE,
		SYNDICATION_FLAG	
	FROM PLEDGED.CL_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE VALID_CL AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(MASTERNOTEREFERENCENUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD13_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD21_CHECK,
		CASE WHEN LENGTH(DIINTERNALRISKRATING) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD22_CHECK,
		CASE WHEN LENGTH(INTERESTRATEINDEX) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD28_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD39_CHECK,
		CASE WHEN LENGTH(INDUSTRYCODE) <= 6 THEN 'OK' ELSE 'KO' END AS FIELD40_CHECK,
		CASE WHEN LENGTH(SYNDICATION_FLAG) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD41_CHECK

	FROM CL_EXPORT;
QUIT;

%Checks_No_OK(VALID_CL, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/VALID_COMMERCIAL_NO_OK.xlsx,
Commercial);


%exportToTXT(HEADER_CL,HEADER_CL);
%exportToTXT(TRAILER_CL,TRAILER_CL);
%exportToTXT(CL_EXPORT,COMMERCIAL);


/* Construction Loans */

PROC SQL;
	CREATE TABLE HEADER_CONS AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186790U102BIC1' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 790 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.CONSTRUCTIONLOANSFINAL;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_CONS AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		. AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.CONSTRUCTIONLOANSFINAL;
QUIT;

PROC SQL;
	CREATE TABLE CONSTRUCTIONLOANS_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		OBLIGORNAME,
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		MASTERNOTEREFERENCENUMBER,
		MASTERNOTEORIGBALCOMM,
		MASTERNOTECURRCOMMAM,
		MASTERNOTEMATURITYDATE,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		DIINTERNALRISKRATING,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		AMORTIZATIONSTARTDATE,
		AMORTIZATIONENDDATE,
		INTERESTRATEINDEX,
		INTERESTRATESPREAD,
		INTERESTRATECAP,
		INTERESTRATEFLOOR,
		CALLREPORTCODE,
		COLLATERALLOCATIONZIPCODE,
		COLLATERALLOCATIONCOUNTRY
	FROM PLEDGED.CONSTRUCTIONLOANSFINAL;
QUIT;

PROC SQL;
	CREATE TABLE VALID_CONSTRUCTIONLOANS AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(MASTERNOTEREFERENCENUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD13_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD21_CHECK,
		CASE WHEN LENGTH(DIINTERNALRISKRATING) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD22_CHECK,
		CASE WHEN LENGTH(INTERESTRATEINDEX) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD27_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD31_CHECK,
		CASE WHEN LENGTH(COLLATERALLOCATIONZIPCODE) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD32_CHECK,
		CASE WHEN LENGTH(COLLATERALLOCATIONCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD33_CHECK
	FROM CONSTRUCTIONLOANS_EXPORT;
QUIT;

%Checks_No_OK(VALID_CONSTRUCTIONLOANS, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/VALID_CONSTRUCTION_NO_OK.xlsx,
Construction);


%exportToTXT(HEADER_CONS,HEADER_CONS);
%exportToTXT(TRAILER_CONS,TRAILER_CONS);
%exportToTXT(CONSTRUCTIONLOANS_EXPORT,CONSTRUCTIONLOANS);


/* Commercial Real Estate Loans */

PROC SQL;
	CREATE TABLE HEADER_CRE AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186780U102BIC3' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 780 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.CRE_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_CRE AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		SUM(CURRENTCOMMITMENT) AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.CRE_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE CRE_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check the value we need to send here */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		OBLIGORNAME,
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		MASTERNOTEREFERENCENUMBER,
		MASTERNOTEORIGBALCOMM,
		MASTERNOTECURRCOMMAM,
		MASTERNOTEMATURITYDATE,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		DIINTERNALRISKRATING,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		CURRENTCOMMITMENT,
		AMORTIZATIONSTARTDATE,
		AMORTIZATIONENDDATE,
		INTERESTRATEINDEX,
		INTERESTRATESPREAD,
		INTERESTRATECAP,
		INTERESTRATEFLOOR,
		PREPAYLOCKOUTENDDATE,
		DRAWDOWNTYPE,
		DRAWPERIODENDDATE,
		COLLATERALTYPE,
		MOSTRECENTDSCR,
		DATEOFMOSTRECENTDSCR,
		DSCRATORIGINATION,
		MOSTRECENTLTVCLTV,
		DATEOFMOSTRECENTLTVCLTV,
		LTVCLTVATORIGINATION,
		CALLREPORTCODE,
		COLLATERALLOCATIONZIPCODE,
		COLLATERALLOCATIONCOUNTRY,
		SYNDICATION_FLAG
	FROM PLEDGED.CRE_FINAL;
QUIT;

PROC SQL;
	CREATE TABLE VALID_CRE AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(MASTERNOTEREFERENCENUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD13_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD21_CHECK,
		CASE WHEN LENGTH(DIINTERNALRISKRATING) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD22_CHECK,
		CASE WHEN LENGTH(INTERESTRATEINDEX) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD28_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD42_CHECK,
		CASE WHEN LENGTH(COLLATERALLOCATIONZIPCODE) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD43_CHECK,
		CASE WHEN LENGTH(COLLATERALLOCATIONCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD44_CHECK,
		CASE WHEN LENGTH(SYNDICATION_FLAG) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD45_CHECK
	FROM CRE_EXPORT;
QUIT;

%Checks_No_OK(VALID_CRE, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/CRE_NO_OK.xlsx,
CRE);


%exportToTXT(HEADER_CRE,HEADER_CRE);
%exportToTXT(TRAILER_CRE,TRAILER_CRE);
%exportToTXT(CRE_EXPORT,CRE);



/* Unsecured Consumer Loans */

PROC SQL;
	CREATE TABLE HEADER_UNSEC_CONS AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186740U102BIC2' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 740 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.UNSECUREDCONSUMERFINAL;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_UNSEC_CONS AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		. AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.UNSECUREDCONSUMERFINAL;
QUIT;

PROC SQL;
	CREATE TABLE UNSECUREDCONSUMER_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		"" as OBLIGORNAME, /*FED doesn't require the Obligor Name anymore for Consumer files*/
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		INTERESTRATEINDEX,
		INTERESTRATESPREAD,
		DRAWDOWNTYPE,
		DRAWPERIODENDDATE,
		MOSTRECENTCREDITBUREAUSCORE,
		DATEMOSTRECCREDITBURSCORE,
		CREDITBUREAUSCOREATORIGINATION,
		CALLREPORTCODE
	FROM PLEDGED.UNSECUREDCONSUMERFINAL;
QUIT;

PROC SQL;
	CREATE TABLE VALID_UNSECUREDCONSUMER AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		/*CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,*/
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD9_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD17_CHECK,
		CASE WHEN LENGTH(INTERESTRATEINDEX) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD20_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD33_CHECK
	FROM UNSECUREDCONSUMER_EXPORT;
QUIT;


%Checks_No_OK(VALID_UNSECUREDCONSUMER, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/UNSECUREDCONSUMER_NO_OK.xlsx,
Unsecured);



%exportToTXT(HEADER_UNSEC_CONS,HEADER_UNSEC_CONS);
%exportToTXT(TRAILER_UNSEC_CONS,TRAILER_UNSEC_CONS);
%exportToTXT(UNSECUREDCONSUMER_EXPORT,UNSECUREDCONSUMER);


/* Secured Consumer Loans */

PROC SQL;
	CREATE TABLE HEADER_SEC_CONS AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186741U102BIC2' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 741 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.SECUREDCONSUMERFINAL;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_SEC_CONS AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		. AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.SECUREDCONSUMERFINAL;
QUIT;

PROC SQL;
	CREATE TABLE SECUREDCONSUMER_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		"" as OBLIGORNAME,/*FED doesn't require the Obligor Name anymore for Consumer files*/
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		INTERESTRATEINDEX,
		INTERESTRATESPREAD,
		INTERESTRATECAP,
		INTERESTRATEFLOOR,
		DRAWDOWNTYPE,
		DRAWPERIODENDDATE,
		COLLATERALTYPE,
		MOSTRECENTLTVCLTV,
		DATEOFMOSTRECENTLTVCLTV,
		LTVCLTVATORIGINATION,
		MOSTRECENTCREDITBUREAUSCORE,
		DATEMOSTRECCREDITBURSCORE,
		CREDITBUREAUSCOREATORIGINATION,
		CALLREPORTCODE
	FROM PLEDGED.SECUREDCONSUMERFINAL;
QUIT;

PROC SQL;
	CREATE TABLE VALID_SECUREDCONSUMER AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		/*CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,*/
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD9_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD17_CHECK,
		CASE WHEN LENGTH(INTERESTRATEINDEX) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD20_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD33_CHECK
	FROM SECUREDCONSUMER_EXPORT;
QUIT;


%Checks_No_OK(VALID_SECUREDCONSUMER, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/SECUREDCONSUMER_NO_OK.xlsx,
Secured);


%exportToTXT(HEADER_SEC_CONS,HEADER_SEC_CONS);
%exportToTXT(TRAILER_SEC_CONS,TRAILER_SEC_CONS);
%exportToTXT(SECUREDCONSUMER_EXPORT,SECUREDCONSUMER);



/* US Agency Guaranteed Loans */

PROC SQL;
	CREATE TABLE HEADER_US_AGENCY AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER format = z9., '062001186720U102BIC2' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR format = z9., 'U102' AS ACCOUNT_CODE, 720 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.US_Agency_Guaranteed;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_US_AGENCY AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) + 2 AS TOTAL_REC_COUNT,
		SUM(BALANCE) AS TOTAL_BAL FORMAT = 15.2,
		. AS TOTAL_CUR_COM_AMT FORMAT = 15.2
	FROM PLEDGED.US_Agency_Guaranteed;
QUIT;


PROC SQL;
	CREATE TABLE US_AGENCY_GUARANTEED_EXPORT AS
	SELECT
		1 AS RECORD_CODE, /* Check */
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		OBLIGORNAME,
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		MASTERNOTEREFERENCENUMBER,
		MASTERNOTEORIGBALCOMM,
		MASTERNOTECURRCOMMAM,
		MASTERNOTEMATURITYDATE,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		AMORTIZATIONSTARTDATE,
		AMORTIZATIONENDDATE,
		CALLREPORTCODE,
		INDUSTRYCODE,
		INDUSTRYCODETYPE
	FROM PLEDGED.US_Agency_Guaranteed;
QUIT;

PROC SQL;
	CREATE TABLE VALID_US_AGENCY AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(MASTERNOTEREFERENCENUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD13_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD21_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD26_CHECK,
		CASE WHEN LENGTH(INDUSTRYCODE) <= 6 THEN 'OK' ELSE 'KO' END AS FIELD27_CHECK
	FROM US_AGENCY_GUARANTEED_EXPORT;
QUIT;


%Checks_No_OK(VALID_US_AGENCY, 
/SAS_RiskModelDev/SAS_FSB/Pledged loans/Results/US_AGENCY_NO_OK.xlsx,
US_Agency);


%exportToTXT(HEADER_US_AGENCY,HEADER_US_AGENCY);
%exportToTXT(TRAILER_US_AGENCY,TRAILER_US_AGENCY);
%exportToTXT(US_AGENCY_GUARANTEED_EXPORT,US_AGENCY_GUARANTEED);





data test;
set CONSTRUCTIONLOANS_EXPORT HEADER_CONS TRAILER_CONS;
run;


/*NON GUARANTEED NOW WILL BE DISTRIBUTED IN CRE, CONSTRUCTION AND COMMERCIAL*/
/* US Agency Non Guaranteed Loans*/
/*
PROC SQL;
	CREATE TABLE HEADER_US_AGENCY_NON AS
	SELECT DISTINCT 0 AS RECORD_CODE, 062001186 AS ABA_NUMBER, '' AS LOAN_ID,
		062001186 AS HOLDING_ABA_NBR, 'U102' AS ACCOUNT_CODE, 725 AS ASSET_CODE,
		&batch. AS PRIN_BAL_ASOFDATE, &Today_Date. AS PROC_DATE, &Today_Hour. AS PROC_TIME format = z6.
	FROM PLEDGED.US_Agency_Non_Guaranteed;
QUIT;

PROC SQL;
	CREATE TABLE TRAILER_US_AGENCY_NON AS
	SELECT DISTINCT 9 AS RECORD_CODE, 
		COUNT(*) AS TOTAL_REC_COUNT,
		SUM(BALANCE) FORMAT = 15.2 AS TOTAL_BAL,
		'0,00' AS TOTAL_CUR_COM_AMT
	FROM PLEDGED.US_Agency_Non_Guaranteed;
QUIT;


PROC SQL;
	CREATE TABLE US_AGENCY_NON_GUARANTEED_EXPORT AS
	SELECT
		1 AS RECORD_CODE,
		OBLIGATIONNUMBER,
		OBLIGORNUMBER,
		OBLIGORNAME,
		OBLIGORCITY,
		OBLIGORSTATE,
		OBLIGORCOUNTRY,
		MASTERNOTEREFERENCENUMBER,
		MASTERNOTEORIGBALCOMM,
		MASTERNOTECURRCOMMAM,
		MASTERNOTEMATURITYDATE,
		INTERESTFREQUENCY,
		PRINCIPALPAYMENTFREQUENCY,
		INTERESTNEXTDUEDATE,
		INTERESTPAIDTHROUGHDATE,
		PRINCIPALNEXTDUEDATE,
		PRINCIPALPAIDTHROUGHDATE,
		BALANCE,
		INTERESTRATE,
		MATURITYDATE,
		FXFLFLAG,
		DIINTERNALRISKRATING,
		ORIGINATIONDATE,
		ORIGINALBALANCE,
		AMORTIZATIONSTARTDATE,
		AMORTIZATIONENDDATE,
		CALLREPORTCODE,
		INDUSTRYCODE,
		INDUSTRYCODETYPE
	FROM PLEDGED.US_Agency_Non_Guaranteed;
QUIT;

PROC SQL;
	CREATE TABLE VALID_US_AGENCY_NON AS
	SELECT DISTINCT
		CASE WHEN LENGTH(OBLIGATIONNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD2_CHECK,
		CASE WHEN LENGTH(OBLIGORNUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD3_CHECK,
		CASE WHEN LENGTH(OBLIGORNAME) <= 40 THEN 'OK' ELSE 'KO' END AS FIELD4_CHECK,
		CASE WHEN LENGTH(OBLIGORCITY) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD5_CHECK,
		CASE WHEN LENGTH(OBLIGORSTATE) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD6_CHECK,
		CASE WHEN LENGTH(OBLIGORCOUNTRY) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD7_CHECK,
		CASE WHEN LENGTH(MASTERNOTEREFERENCENUMBER) <= 30 THEN 'OK' ELSE 'KO' END AS FIELD8_CHECK,
		CASE WHEN LENGTH(INTERESTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD12_CHECK,
		CASE WHEN LENGTH(PRINCIPALPAYMENTFREQUENCY) <= 1 THEN 'OK' ELSE 'KO' END AS FIELD13_CHECK,
		CASE WHEN LENGTH(FXFLFLAG) <= 2 THEN 'OK' ELSE 'KO' END AS FIELD21_CHECK,
		CASE WHEN LENGTH(DIINTERNALRISKRATING) <= 5 THEN 'OK' ELSE 'KO' END AS FIELD22_CHECK,
		CASE WHEN LENGTH(CALLREPORTCODE) <= 20 THEN 'OK' ELSE 'KO' END AS FIELD26_CHECK,
		CASE WHEN LENGTH(INDUSTRYCODE) <= 6 THEN 'OK' ELSE 'KO' END AS FIELD27_CHECK
	FROM US_AGENCY_NON_GUARANTEED_EXPORT;
QUIT;

PROC SQL;
	CREATE TABLE US_AGENCY_NON_INCORRECT AS
	SELECT DISTINCT OBLIGORNUMBER
	FROM US_AGENCY_NON_GUARANTEED_EXPORT
	WHERE LENGTH(OBLIGORNUMBER) > 30;
RUN;

%exportToTXT(HEADER_US_AGENCY_NON,HEADER_US_AGENCY_NON);
%exportToTXT(TRAILER_US_AGENCY_NON,TRAILER_US_AGENCY_NON);
%exportToTXT(US_AGENCY_NON_GUARANTEED_EXPORT,US_AGENCY_NON_GUARANTEED);
*/